{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _isFunction from 'lodash-es/isFunction';\nimport _isObject from 'lodash-es/isObject';\nimport _upperFirst from 'lodash-es/upperFirst';\nimport _merge from 'lodash-es/merge';\nimport { http } from 'components';\nimport { setMeta } from './fields';\nimport { goToPage } from './navigation';\nexport const AUTH_INIT_USER = 'AUTH_INIT_USER';\nexport const AUTH_SET_DATA = 'AUTH_SET_DATA';\nexport const AUTH_ADD_SOCIAL = 'AUTH_ADD_SOCIAL';\nlet lastInitAction = null;\nexport const init = initAction => (dispatch, getState) => {\n  lastInitAction = initAction;\n  return initAction(getState()).then(data => {\n    // Configure components\n    if (_isObject(data.config)) {\n      const components = require('components');\n\n      _Object$keys(data.config).map(name => {\n        if (components[name]) {\n          _Object$keys(data.config[name]).map(key => {\n            const value = data.config[name][key];\n\n            const setter = 'set' + _upperFirst(key);\n\n            if (_isFunction(components[name][setter])) {\n              components[name][setter](value);\n            } else if (_isObject(components[name][key]) && _isObject(value)) {\n              _merge(components[name][key], value);\n            } else {\n              components[name][key] = value;\n            }\n          });\n        }\n      });\n    }\n\n    return dispatch([// User auth\n    setUser(data.user), // Meta models & enums\n    data.meta && setMeta(data.meta), // User auth\n    setData(data)].filter(Boolean));\n  });\n};\nexport const login = (token, redirectPageId = 'root') => dispatch => {\n  http.setAccessToken(token);\n  return dispatch(init(lastInitAction)).then(() => dispatch(goToPage(redirectPageId)));\n};\nexport const addSocial = social => ({\n  type: AUTH_ADD_SOCIAL,\n  social\n});\nexport const setUser = user => ({\n  type: AUTH_INIT_USER,\n  user: user || null\n});\nexport const setData = data => ({\n  type: AUTH_SET_DATA,\n  data\n});\nexport const logout = () => dispatch => {\n  http.setAccessToken(null);\n  return dispatch([setUser(null), goToPage('root')]);\n};","map":{"version":3,"sources":["/usr/local/var/www/neutrino-web/node_modules/yii-steroids/actions/auth.js"],"names":["_isFunction","_isObject","_upperFirst","_merge","http","setMeta","goToPage","AUTH_INIT_USER","AUTH_SET_DATA","AUTH_ADD_SOCIAL","lastInitAction","init","initAction","dispatch","getState","then","data","config","components","require","map","name","key","value","setter","setUser","user","meta","setData","filter","Boolean","login","token","redirectPageId","setAccessToken","addSocial","social","type","logout"],"mappings":"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","sourcesContent":["import _isFunction from 'lodash-es/isFunction';\nimport _isObject from 'lodash-es/isObject';\nimport _upperFirst from 'lodash-es/upperFirst';\nimport _merge from 'lodash-es/merge';\n\nimport {http} from 'components';\nimport {setMeta} from './fields';\nimport {goToPage} from './navigation';\n\nexport const AUTH_INIT_USER = 'AUTH_INIT_USER';\nexport const AUTH_SET_DATA = 'AUTH_SET_DATA';\nexport const AUTH_ADD_SOCIAL = 'AUTH_ADD_SOCIAL';\n\nlet lastInitAction = null;\n\nexport const init = (initAction) => (dispatch, getState) => {\n    lastInitAction = initAction;\n\n    return initAction(getState())\n        .then(data => {\n            // Configure components\n            if (_isObject(data.config)) {\n                const components = require('components');\n                Object.keys(data.config).map(name => {\n                    if (components[name]) {\n                        Object.keys(data.config[name]).map(key => {\n                            const value = data.config[name][key];\n                            const setter = 'set' + _upperFirst(key);\n                            if (_isFunction(components[name][setter])) {\n                                components[name][setter](value);\n                            } else if (_isObject(components[name][key]) && _isObject(value)) {\n                                _merge(components[name][key], value);\n                            } else {\n                                components[name][key] = value;\n                            }\n                        });\n                    }\n                });\n            }\n\n            return dispatch([\n                // User auth\n                setUser(data.user),\n\n                // Meta models & enums\n                data.meta && setMeta(data.meta),\n\n                // User auth\n                setData(data),\n            ].filter(Boolean));\n        });\n};\n\nexport const login = (token, redirectPageId = 'root') => dispatch => {\n    http.setAccessToken(token);\n    return dispatch(init(lastInitAction))\n        .then(() => dispatch(goToPage(redirectPageId)));\n};\n\nexport const addSocial = social => ({\n    type: AUTH_ADD_SOCIAL,\n    social,\n});\n\nexport const setUser = user => ({\n    type: AUTH_INIT_USER,\n    user: user || null,\n});\n\nexport const setData = data => ({\n    type: AUTH_SET_DATA,\n    data,\n});\n\nexport const logout = () => dispatch => {\n    http.setAccessToken(null);\n    return dispatch([\n        setUser(null),\n        goToPage('root')\n    ]);\n};\n"]},"metadata":{},"sourceType":"module"}