{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport _isEqual from 'lodash-es/isEqual';\nimport { apiAddConfigs, apiRemoveConfigs, getConfigId } from '../../actions/api';\nimport { connect } from 'react-redux';\n\nvar stateMap = function stateMap(state) {\n  return {\n    apiData: state.api && state.api.data || null\n  };\n};\n\nexport default (function (configsFunc) {\n  return function (WrappedComponent) {\n    var _class, _temp;\n\n    return connect(stateMap)((_temp = _class =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(ApiHOC, _React$Component);\n\n      function ApiHOC() {\n        var _this;\n\n        _classCallCheck(this, ApiHOC);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ApiHOC).apply(this, arguments));\n        _this.state = {\n          overwritedProps: null\n        };\n        _this._onUpdate = _this._onUpdate.bind(_assertThisInitialized(_this));\n        return _this;\n      }\n\n      _createClass(ApiHOC, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this.props.dispatch(apiAddConfigs(configsFunc(_objectSpread({}, this.props, {}, this.state.overwritedProps))));\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.props.dispatch(apiRemoveConfigs(configsFunc(_objectSpread({}, this.props, {}, this.state.overwritedProps))));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps, prevState) {\n          var prevConfigs = [].concat(configsFunc(_objectSpread({}, prevProps, {}, prevState.overwritedProps)));\n          var nextConfigs = [].concat(configsFunc(_objectSpread({}, this.props, {}, this.state.overwritedProps)));\n\n          for (var i = 0; i < Math.max(prevConfigs.length, nextConfigs.length); i++) {\n            if (!_isEqual(prevConfigs[i], nextConfigs[i])) {\n              this.props.dispatch([apiRemoveConfigs(prevConfigs[i]), apiAddConfigs(nextConfigs[i])]);\n            }\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this2 = this;\n\n          var data = {};\n\n          if (this.props.apiData) {\n            [].concat(configsFunc(_objectSpread({}, this.props, {}, this.state.overwritedProps))).forEach(function (config) {\n              data[config.key] = _this2.props.apiData[getConfigId(config)];\n            });\n          }\n\n          return __jsx(WrappedComponent, _extends({}, this.props, this.state.overwritedProps, data, {\n            updateApiConfig: this._onUpdate\n          }));\n        }\n      }, {\n        key: \"_onUpdate\",\n        value: function _onUpdate(overwritedProps) {\n          this.setState({\n            overwritedProps: overwritedProps\n          });\n        }\n      }]);\n\n      return ApiHOC;\n    }(React.Component), _defineProperty(_class, \"WrappedComponent\", WrappedComponent), _temp));\n  };\n});","map":null,"metadata":{},"sourceType":"module"}