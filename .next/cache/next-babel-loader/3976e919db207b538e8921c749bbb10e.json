{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _get from 'lodash-es/get';\nimport { http, clientStorage } from 'components';\nexport var LIST_INIT = 'LIST_INIT';\nexport var LIST_BEFORE_FETCH = 'LIST_BEFORE_FETCH';\nexport var LIST_AFTER_FETCH = 'LIST_AFTER_FETCH';\nexport var LIST_ITEM_ADD = 'LIST_ITEM_ADD';\nexport var LIST_ITEM_UPDATE = 'LIST_ITEM_UPDATE';\nexport var LIST_DESTROY = 'LIST_DESTROY';\nexport var LIST_TOGGLE_ITEM = 'LIST_TOGGLE_ITEM';\nexport var LIST_TOGGLE_ALL = 'LIST_TOGGLE_ALL';\nexport var LIST_SET_LAYOUT = 'LIST_SET_LAYOUT';\nvar STORAGE_LAYOUT_KEY_PREFIX = 'listLayout_';\nvar lazyTimers = {};\n\nvar defaultFetchHandler = function defaultFetchHandler(list) {\n  var url = list.action;\n\n  if (list.scope) {\n    url += (url.indexOf('?') !== -1 ? '&' : '?') + 'scope=' + list.scope.join(',');\n  }\n\n  return http.send(list.actionMethod, url || location.pathname, _objectSpread({}, list.query, {\n    page: list.page,\n    pageSize: list.pageSize,\n    sort: list.sort\n  })).then(function (response) {\n    return response.data;\n  });\n};\n\nexport var init = function init(listId, props) {\n  return function (dispatch) {\n    return dispatch({\n      action: props.action || props.action === '' ? props.action : null,\n      actionMethod: props.actionMethod || 'post',\n      onFetch: props.onFetch,\n      scope: props.scope,\n      page: props.defaultPage,\n      pageSize: props.defaultPageSize,\n      sort: props.defaultSort || null,\n      total: props.total || null,\n      query: props.query || null,\n      items: props.items || null,\n      loadMore: props.loadMore,\n      primaryKey: props.primaryKey,\n      layoutName: clientStorage.get(STORAGE_LAYOUT_KEY_PREFIX + listId) || props.selectedLayoutName || _get(props, 'layoutNames.0.id') || null,\n      listId: listId,\n      type: LIST_INIT\n    });\n  };\n};\nexport var fetch = function fetch(listId) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (dispatch, getState) {\n    var list = _objectSpread({}, _get(getState(), ['list', 'lists', listId]), {}, params);\n\n    if (!list.action && list.action !== '') {\n      return;\n    }\n\n    var onFetch = list.onFetch || defaultFetchHandler;\n    return dispatch([_objectSpread({}, params, {\n      listId: listId,\n      type: LIST_BEFORE_FETCH\n    }), onFetch(list).then(function (data) {\n      if (!getState().list.lists[listId]) {\n        return [];\n      }\n\n      return _objectSpread({}, data, {\n        listId: listId,\n        type: LIST_AFTER_FETCH\n      });\n    })]);\n  };\n};\nexport var lazyFetch = function lazyFetch(listId, params) {\n  return function (dispatch) {\n    if (lazyTimers[listId]) {\n      clearTimeout(lazyTimers[listId]);\n    }\n\n    lazyTimers[listId] = setTimeout(function () {\n      return dispatch(fetch(listId, params));\n    }, 200);\n  };\n};\nexport var setPage = function setPage(listId, page, loadMore) {\n  return fetch(listId, {\n    page: page,\n    loadMore: loadMore\n  });\n};\nexport var setPageSize = function setPageSize(listId, pageSize) {\n  return fetch(listId, {\n    page: 1,\n    pageSize: pageSize\n  });\n};\nexport var setSort = function setSort(listId, sort) {\n  return fetch(listId, {\n    sort: sort\n  });\n};\nexport var refresh = function refresh(listId) {\n  return fetch(listId);\n};\nexport var add = function add(listId, item) {\n  return {\n    item: item,\n    listId: listId,\n    type: LIST_ITEM_ADD\n  };\n};\nexport var update = function update(listId, item, condition) {\n  return {\n    item: item,\n    condition: condition,\n    listId: listId,\n    type: LIST_ITEM_UPDATE\n  };\n};\nexport var destroy = function destroy(listId) {\n  if (lazyTimers[listId]) {\n    clearTimeout(lazyTimers[listId]);\n  }\n\n  return {\n    listId: listId,\n    type: LIST_DESTROY\n  };\n};\nexport var toggleItem = function toggleItem(listId, itemId) {\n  return {\n    listId: listId,\n    itemId: itemId,\n    type: LIST_TOGGLE_ITEM\n  };\n};\nexport var toggleAll = function toggleAll(listId) {\n  return {\n    listId: listId,\n    type: LIST_TOGGLE_ALL\n  };\n};\nexport var setLayoutName = function setLayoutName(listId, layoutName) {\n  clientStorage.set(STORAGE_LAYOUT_KEY_PREFIX + listId, layoutName);\n  return {\n    listId: listId,\n    layoutName: layoutName,\n    type: LIST_SET_LAYOUT\n  };\n};","map":{"version":3,"sources":["/usr/local/var/www/neutrino-web/node_modules/yii-steroids/actions/list.js"],"names":["_get","http","clientStorage","LIST_INIT","LIST_BEFORE_FETCH","LIST_AFTER_FETCH","LIST_ITEM_ADD","LIST_ITEM_UPDATE","LIST_DESTROY","LIST_TOGGLE_ITEM","LIST_TOGGLE_ALL","LIST_SET_LAYOUT","STORAGE_LAYOUT_KEY_PREFIX","lazyTimers","defaultFetchHandler","list","url","action","scope","indexOf","join","send","actionMethod","location","pathname","query","page","pageSize","sort","then","response","data","init","listId","props","dispatch","onFetch","defaultPage","defaultPageSize","defaultSort","total","items","loadMore","primaryKey","layoutName","get","selectedLayoutName","type","fetch","params","getState","lists","lazyFetch","clearTimeout","setTimeout","setPage","setPageSize","setSort","refresh","add","item","update","condition","destroy","toggleItem","itemId","toggleAll","setLayoutName","set"],"mappings":"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","sourcesContent":["import _get from 'lodash-es/get';\n\nimport {http, clientStorage} from 'components';\n\nexport const LIST_INIT = 'LIST_INIT';\nexport const LIST_BEFORE_FETCH = 'LIST_BEFORE_FETCH';\nexport const LIST_AFTER_FETCH = 'LIST_AFTER_FETCH';\nexport const LIST_ITEM_ADD = 'LIST_ITEM_ADD';\nexport const LIST_ITEM_UPDATE = 'LIST_ITEM_UPDATE';\nexport const LIST_DESTROY = 'LIST_DESTROY';\nexport const LIST_TOGGLE_ITEM = 'LIST_TOGGLE_ITEM';\nexport const LIST_TOGGLE_ALL = 'LIST_TOGGLE_ALL';\nexport const LIST_SET_LAYOUT = 'LIST_SET_LAYOUT';\n\nconst STORAGE_LAYOUT_KEY_PREFIX = 'listLayout_';\n\nconst lazyTimers = {};\n\nconst defaultFetchHandler = list => {\n    let url = list.action;\n    if (list.scope) {\n        url += (url.indexOf('?') !== -1 ? '&' : '?') + 'scope=' + list.scope.join(',');\n    }\n\n    return http.send(list.actionMethod, url || location.pathname, {\n        ...list.query,\n        page: list.page,\n        pageSize: list.pageSize,\n        sort: list.sort,\n    })\n        .then(response => response.data);\n};\n\nexport const init = (listId, props) => dispatch => dispatch({\n    action: props.action || props.action === '' ? props.action : null,\n    actionMethod: props.actionMethod || 'post',\n    onFetch: props.onFetch,\n    scope: props.scope,\n    page: props.defaultPage,\n    pageSize: props.defaultPageSize,\n    sort: props.defaultSort || null,\n    total: props.total || null,\n    query: props.query || null,\n    items: props.items || null,\n    loadMore: props.loadMore,\n    primaryKey: props.primaryKey,\n    layoutName: clientStorage.get(STORAGE_LAYOUT_KEY_PREFIX + listId) || props.selectedLayoutName || _get(props, 'layoutNames.0.id') || null,\n    listId,\n    type: LIST_INIT,\n});\n\nexport const fetch = (listId, params = {}) => (dispatch, getState) => {\n    const list = {\n        ..._get(getState(), ['list', 'lists', listId]),\n        ...params,\n    };\n    if (!list.action && list.action !== '') {\n        return;\n    }\n\n    const onFetch = list.onFetch || defaultFetchHandler;\n\n    return dispatch([\n        {\n            ...params,\n            listId,\n            type: LIST_BEFORE_FETCH,\n        },\n        onFetch(list).then(data => {\n            if (!getState().list.lists[listId]) {\n                return [];\n            }\n\n            return {\n                ...data,\n                listId,\n                type: LIST_AFTER_FETCH,\n            };\n        }),\n    ]);\n};\n\nexport const lazyFetch = (listId, params) => dispatch => {\n    if (lazyTimers[listId]) {\n        clearTimeout(lazyTimers[listId]);\n    }\n    lazyTimers[listId] = setTimeout(() => dispatch(fetch(listId, params)), 200);\n};\n\nexport const setPage = (listId, page, loadMore) => fetch(listId, {\n    page,\n    loadMore,\n});\n\nexport const setPageSize = (listId, pageSize) => fetch(listId, {\n    page: 1,\n    pageSize,\n});\n\nexport const setSort = (listId, sort) => fetch(listId, {\n    sort,\n});\n\nexport const refresh = listId => fetch(listId);\n\nexport const add = (listId, item) => ({\n    item,\n    listId,\n    type: LIST_ITEM_ADD,\n});\n\nexport const update = (listId, item, condition) => ({\n    item,\n    condition,\n    listId,\n    type: LIST_ITEM_UPDATE,\n});\n\nexport const destroy = listId => {\n    if (lazyTimers[listId]) {\n        clearTimeout(lazyTimers[listId]);\n    }\n\n    return {\n        listId,\n        type: LIST_DESTROY,\n    };\n};\n\nexport const toggleItem = (listId, itemId) => ({\n    listId,\n    itemId,\n    type: LIST_TOGGLE_ITEM,\n});\n\nexport const toggleAll = listId => ({\n    listId,\n    type: LIST_TOGGLE_ALL,\n});\n\nexport const setLayoutName = (listId, layoutName) => {\n    clientStorage.set(STORAGE_LAYOUT_KEY_PREFIX + listId, layoutName);\n    return {\n        listId,\n        layoutName,\n        type: LIST_SET_LAYOUT,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}