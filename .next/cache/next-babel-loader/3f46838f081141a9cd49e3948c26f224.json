{"ast":null,"code":"export default class WebSocketClient {\n  constructor(params = {}) {\n    this.wsUrl = params.wsUrl || null;\n    this.onOpen = params.onOpen || null;\n    this.onClose = params.onClose || null;\n    this.onMessage = params.onMessage || null;\n    this._connection = null;\n    this._tryCount = null;\n    this._connect = this._connect.bind(this);\n    this._onOpen = this._onOpen.bind(this);\n    this._onMessage = this._onMessage.bind(this);\n    this._onClose = this._onClose.bind(this);\n  }\n\n  open() {\n    // Close previous\n    this.close();\n\n    this._connect();\n  }\n\n  close() {\n    if (this._connection) {\n      this._connection.close();\n    }\n  }\n\n  _connect() {\n    this._connection = new WebSocket(this.wsUrl);\n    this._connection.onopen = this._onOpen;\n    this._connection.onmessage = this._onMessage;\n    this._connection.onclose = this._onClose;\n  }\n\n  _reConnect() {\n    let delay = 1000;\n\n    if (this._tryCount > 10) {\n      delay = 2000;\n    }\n\n    if (this._tryCount > 50) {\n      delay = 5000;\n    }\n\n    if (this._tryCount > 100) {\n      delay = 15000;\n    }\n\n    this._tryCount++;\n    setTimeout(this._connect, delay);\n  }\n\n  _onOpen() {\n    this._tryCount = 0;\n\n    if (this.onOpen) {\n      this.onOpen();\n    }\n  }\n\n  _onMessage(message) {\n    if (this.onMessage) {\n      this.onMessage(JSON.parse(message.data));\n    }\n  }\n\n  _onClose(event) {\n    if (this.onClose) {\n      this.onClose(event);\n    }\n\n    this._reConnect();\n  }\n\n}\n;","map":null,"metadata":{},"sourceType":"module"}