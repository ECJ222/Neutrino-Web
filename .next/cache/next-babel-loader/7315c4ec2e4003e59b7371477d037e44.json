{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _get from 'lodash-es/get';\nimport _orderBy from 'lodash-es/orderBy';\nimport { CURRENCY_SET_CURRENT, CURRENCY_SET_PRICES } from 'actions/currency';\nimport CurrencyEnum from 'enums/CurrencyEnum';\nvar initialState = {\n  base: CurrencyEnum.getBaseCurrency(CurrencyEnum.USD_N),\n  source: CurrencyEnum.getSourceCurrency(CurrencyEnum.USD_N),\n  quote: CurrencyEnum.USD_N,\n  prices: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CURRENCY_SET_CURRENT:\n      return _objectSpread({}, state, {\n        base: action.base,\n        quote: action.quote,\n        source: action.source\n      });\n\n    case CURRENCY_SET_PRICES:\n      return _objectSpread({}, state, {\n        prices: action.prices\n      });\n  }\n\n  return state;\n});\nexport var getBaseCurrency = function getBaseCurrency(state) {\n  return _get(state, 'currency.base');\n};\nexport var getQuoteCurrency = function getQuoteCurrency(state) {\n  return _get(state, 'currency.quote');\n};\nexport var getSourceCurrency = function getSourceCurrency(state) {\n  return _get(state, 'currency.source');\n};\nexport var getPairName = function getPairName(state) {\n  return getBaseCurrency(state) + '_' + getQuoteCurrency(state);\n};\nexport var getPrices = function getPrices(state) {\n  return state.currency.prices;\n};\nexport var getWavesExchanges = function getWavesExchanges(state, currency) {\n  return state.currency.prices[currency] || [];\n};\nexport var getLastWavesExchange = function getLastWavesExchange(state, currency) {\n  var prices = getWavesExchanges(state, currency);\n\n  if (prices.length > 0) {\n    prices = _orderBy(prices, 'height', 'desc');\n    return prices[0].price;\n  } else {\n    return 0;\n  }\n};","map":{"version":3,"sources":["/usr/local/var/www/neutrino-web/src/reducers/currency.js"],"names":["_get","_orderBy","CURRENCY_SET_CURRENT","CURRENCY_SET_PRICES","CurrencyEnum","initialState","base","getBaseCurrency","USD_N","source","getSourceCurrency","quote","prices","state","action","type","getQuoteCurrency","getPairName","getPrices","currency","getWavesExchanges","getLastWavesExchange","length","price"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,SAAQC,oBAAR,EAA8BC,mBAA9B,QAAwD,kBAAxD;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAEF,YAAY,CAACG,eAAb,CAA6BH,YAAY,CAACI,KAA1C,CADW;AAEjBC,EAAAA,MAAM,EAAEL,YAAY,CAACM,iBAAb,CAA+BN,YAAY,CAACI,KAA5C,CAFS;AAGjBG,EAAAA,KAAK,EAAEP,YAAY,CAACI,KAHH;AAIjBI,EAAAA,MAAM,EAAE;AAJS,CAArB;AAOA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAE7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,oBAAL;AACI,+BACOW,KADP;AAEIP,QAAAA,IAAI,EAAEQ,MAAM,CAACR,IAFjB;AAGIK,QAAAA,KAAK,EAAEG,MAAM,CAACH,KAHlB;AAIIF,QAAAA,MAAM,EAAEK,MAAM,CAACL;AAJnB;;AAOJ,SAAKN,mBAAL;AACI,+BACOU,KADP;AAEID,QAAAA,MAAM,EAAEE,MAAM,CAACF;AAFnB;AAVR;;AAgBA,SAAOC,KAAP;AACH,CAnBD;AAqBA,OAAO,IAAMN,eAAe,GAAG,SAAlBA,eAAkB,CAAAM,KAAK;AAAA,SAAIb,IAAI,CAACa,KAAD,EAAQ,eAAR,CAAR;AAAA,CAA7B;AACP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAH,KAAK;AAAA,SAAIb,IAAI,CAACa,KAAD,EAAQ,gBAAR,CAAR;AAAA,CAA9B;AACP,OAAO,IAAMH,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAG,KAAK;AAAA,SAAIb,IAAI,CAACa,KAAD,EAAQ,iBAAR,CAAR;AAAA,CAA/B;AACP,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAJ,KAAK;AAAA,SAAIN,eAAe,CAACM,KAAD,CAAf,GAAyB,GAAzB,GAA+BG,gBAAgB,CAACH,KAAD,CAAnD;AAAA,CAAzB;AACP,OAAO,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAAAL,KAAK;AAAA,SAAIA,KAAK,CAACM,QAAN,CAAeP,MAAnB;AAAA,CAAvB;AACP,OAAO,IAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAACP,KAAD,EAAQM,QAAR;AAAA,SAAqBN,KAAK,CAACM,QAAN,CAAeP,MAAf,CAAsBO,QAAtB,KAAmC,EAAxD;AAAA,CAA1B;AACP,OAAO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACR,KAAD,EAAQM,QAAR,EAAqB;AACrD,MAAIP,MAAM,GAAGQ,iBAAiB,CAACP,KAAD,EAAQM,QAAR,CAA9B;;AACA,MAAIP,MAAM,CAACU,MAAP,GAAgB,CAApB,EAAuB;AACnBV,IAAAA,MAAM,GAAGX,QAAQ,CAACW,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAAjB;AACA,WAAOA,MAAM,CAAC,CAAD,CAAN,CAAUW,KAAjB;AACH,GAHD,MAGO;AACH,WAAO,CAAP;AACH;AACJ,CARM","sourcesContent":["import _get from 'lodash-es/get';\nimport _orderBy from 'lodash-es/orderBy';\n\nimport {CURRENCY_SET_CURRENT, CURRENCY_SET_PRICES} from 'actions/currency';\nimport CurrencyEnum from 'enums/CurrencyEnum';\n\nconst initialState = {\n    base: CurrencyEnum.getBaseCurrency(CurrencyEnum.USD_N),\n    source: CurrencyEnum.getSourceCurrency(CurrencyEnum.USD_N),\n    quote: CurrencyEnum.USD_N,\n    prices: null,\n};\n\nexport default (state = initialState, action) => {\n\n    switch (action.type) {\n        case CURRENCY_SET_CURRENT:\n            return {\n                ...state,\n                base: action.base,\n                quote: action.quote,\n                source: action.source,\n            };\n\n        case CURRENCY_SET_PRICES:\n            return {\n                ...state,\n                prices: action.prices,\n            };\n    }\n\n    return state;\n};\n\nexport const getBaseCurrency = state => _get(state, 'currency.base');\nexport const getQuoteCurrency = state => _get(state, 'currency.quote');\nexport const getSourceCurrency = state => _get(state, 'currency.source');\nexport const getPairName = state => getBaseCurrency(state) + '_' + getQuoteCurrency(state);\nexport const getPrices = state => state.currency.prices;\nexport const getWavesExchanges = (state, currency) => state.currency.prices[currency] || [];\nexport const getLastWavesExchange = (state, currency) => {\n    let prices = getWavesExchanges(state, currency);\n    if (prices.length > 0) {\n        prices = _orderBy(prices, 'height', 'desc');\n        return prices[0].price;\n    } else {\n        return 0;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}