{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar _require = require('@waves/waves-transactions'),\n    _waitForTx = _require.waitForTx,\n    _broadcast = _require.broadcast;\n\nvar _isString = require('lodash/isString');\n\nvar _isInteger = require('lodash/isInteger');\n\nvar _isObject = require('lodash/isObject');\n\nvar Keeper =\n/*#__PURE__*/\nfunction () {\n  function Keeper(dal) {\n    _classCallCheck(this, Keeper);\n\n    this.dal = dal;\n    this.onUpdate = null;\n    this.fee = 0.009;\n    this._isAvailable = null;\n    this._address = null;\n    this._pageStart = _Date$now();\n    this._checkerInterval = null;\n    this._addressChecker = this._addressChecker.bind(this);\n  }\n\n  _createClass(Keeper, [{\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this._checkerInterval) {\n                  clearInterval(this._checkerInterval);\n                }\n\n                _context.next = 3;\n                return this.getAddress();\n\n              case 3:\n                this._address = _context.sent;\n                this._checkerInterval = setInterval(this._addressChecker, 1000);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this._address = null;\n\n      if (this._checkerInterval) {\n        clearInterval(this._checkerInterval);\n      }\n    }\n  }, {\n    key: \"isInstalled\",\n    value: function () {\n      var _isInstalled = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var keeper;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getPlugin();\n\n              case 2:\n                keeper = _context2.sent;\n                return _context2.abrupt(\"return\", !!keeper);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function isInstalled() {\n        return _isInstalled.apply(this, arguments);\n      }\n\n      return isInstalled;\n    }()\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var keeper, userData;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.getPlugin();\n\n              case 2:\n                keeper = _context3.sent;\n\n                if (keeper) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", null);\n\n              case 5:\n                _context3.prev = 5;\n                _context3.next = 8;\n                return keeper.publicState();\n\n              case 8:\n                userData = _context3.sent;\n                return _context3.abrupt(\"return\", userData.account);\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](5);\n                return _context3.abrupt(\"return\", null);\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[5, 12]]);\n      }));\n\n      function getAccount() {\n        return _getAccount.apply(this, arguments);\n      }\n\n      return getAccount;\n    }()\n  }, {\n    key: \"getAddress\",\n    value: function () {\n      var _getAddress = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var account;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.getAccount();\n\n              case 2:\n                account = _context4.sent;\n\n                if (account) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", null);\n\n              case 5:\n                return _context4.abrupt(\"return\", account.address);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getAddress() {\n        return _getAddress.apply(this, arguments);\n      }\n\n      return getAddress;\n    }()\n    /**\n     * Get WavesKeeper from window\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"getPlugin\",\n    value: function () {\n      var _getPlugin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var _this = this;\n\n        var checker;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                checker = function checker(resolve) {\n                  if (_this._isAvailable === true || _Date$now() - _this._pageStart > 2000 && window.WavesKeeper && window.WavesKeeper.publicState) {\n                    _this._isAvailable = true;\n                    setTimeout(function () {\n                      return resolve(window.WavesKeeper);\n                    });\n                  } else if (_this._isAvailable === false || _Date$now() - _this._pageStart > 5000) {\n                    _this._isAvailable = false;\n                    resolve(null);\n                  } else if (_this._isAvailable === null) {\n                    setTimeout(function () {\n                      return checker(resolve);\n                    }, 100);\n                  }\n                };\n\n                return _context5.abrupt(\"return\", new _Promise(checker));\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getPlugin() {\n        return _getPlugin.apply(this, arguments);\n      }\n\n      return getPlugin;\n    }()\n    /**\n     *\n     * @param {string} pairName\n     * @param {string} contractName\n     * @param {string} method\n     * @param {array} args\n     * @param {string} paymentCurrency\n     * @param {number} paymentAmount\n     * @param {boolean} waitTx\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"sendTransaction\",\n    value: function () {\n      var _sendTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(pairName, contractName, method, args, paymentCurrency, paymentAmount) {\n        var waitTx,\n            keeper,\n            dApp,\n            result,\n            tx,\n            _args6 = arguments;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                waitTx = _args6.length > 6 && _args6[6] !== undefined ? _args6[6] : true;\n                _context6.next = 3;\n                return this.getPlugin();\n\n              case 3:\n                keeper = _context6.sent;\n                dApp = this.dal.contracts[pairName][contractName];\n                console.log(this.dal.contracts);\n                _context6.next = 8;\n                return keeper.signAndPublishTransaction(this._buildTransaction(dApp, method, args, paymentCurrency, paymentAmount));\n\n              case 8:\n                result = _context6.sent;\n\n                if (!result) {\n                  _context6.next = 14;\n                  break;\n                }\n\n                if (waitTx) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", result);\n\n              case 12:\n                tx = JSON.parse(result);\n                return _context6.abrupt(\"return\", _waitForTx(tx.id, {\n                  apiBase: this.dal.nodeUrl,\n                  timeout: 10000\n                }).then(function () {\n                  return result;\n                }));\n\n              case 14:\n                return _context6.abrupt(\"return\", result);\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function sendTransaction(_x, _x2, _x3, _x4, _x5, _x6) {\n        return _sendTransaction.apply(this, arguments);\n      }\n\n      return sendTransaction;\n    }()\n  }, {\n    key: \"signTransaction\",\n    value: function () {\n      var _signTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(pairName, contractName, method, args, paymentCurrency, paymentAmount) {\n        var keeper, dApp;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.getPlugin();\n\n              case 2:\n                keeper = _context7.sent;\n                dApp = this.dal.contracts[pairName][contractName];\n                return _context7.abrupt(\"return\", keeper.signTransaction(this._buildTransaction(dApp, method, args, paymentCurrency, paymentAmount)));\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function signTransaction(_x7, _x8, _x9, _x10, _x11, _x12) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }()\n  }, {\n    key: \"_buildTransaction\",\n    value: function _buildTransaction(dApp, method, args, paymentCurrency, paymentAmount) {\n      var transaction = {\n        type: 16,\n        data: {\n          fee: {\n            assetId: 'WAVES',\n            tokens: String(this.fee)\n          },\n          dApp: dApp,\n          call: {\n            args: args.map(function (item) {\n              return {\n                type: _isInteger(item) ? 'integer' : 'string',\n                value: _isObject(item) ? _JSON$stringify(item) : item\n              };\n            }),\n            \"function\": method\n          },\n          payment: !paymentAmount ? [] : [{\n            assetId: paymentCurrency || 'WAVES',\n            tokens: String(paymentAmount)\n          }]\n        }\n      };\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.log('Transaction:', transaction); // eslint-disable-line no-console\n      }\n\n      return transaction;\n    }\n  }, {\n    key: \"broadcastAndWait\",\n    value: function () {\n      var _broadcastAndWait = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(tx) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (_isString(tx)) {\n                  tx = JSON.parse(tx);\n                }\n\n                _context8.next = 3;\n                return _broadcast(tx, this.dal.nodeUrl);\n\n              case 3:\n                _context8.next = 5;\n                return _waitForTx(tx.id, {\n                  apiBase: this.dal.nodeUrl\n                });\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function broadcastAndWait(_x13) {\n        return _broadcastAndWait.apply(this, arguments);\n      }\n\n      return broadcastAndWait;\n    }()\n  }, {\n    key: \"broadcast\",\n    value: function () {\n      var _broadcast2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(tx) {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (_isString(tx)) {\n                  tx = JSON.parse(tx);\n                }\n\n                return _context9.abrupt(\"return\", _broadcast(tx, this.dal.nodeUrl));\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function broadcast(_x14) {\n        return _broadcast2.apply(this, arguments);\n      }\n\n      return broadcast;\n    }()\n  }, {\n    key: \"waitForTx\",\n    value: function () {\n      var _waitForTx2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(tx) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (_isString(tx)) {\n                  tx = JSON.parse(tx);\n                }\n\n                return _context10.abrupt(\"return\", _waitForTx(tx.id, {\n                  apiBase: this.dal.nodeUrl\n                }));\n\n              case 2:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function waitForTx(_x15) {\n        return _waitForTx2.apply(this, arguments);\n      }\n\n      return waitForTx;\n    }()\n  }, {\n    key: \"_addressChecker\",\n    value: function () {\n      var _addressChecker2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11() {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.getAddress();\n\n              case 2:\n                address = _context11.sent;\n\n                if (this._address && address && this._address !== address) {\n                  this._address = address;\n\n                  if (this.onUpdate) {\n                    this.onUpdate(this._address);\n                  }\n                }\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _addressChecker() {\n        return _addressChecker2.apply(this, arguments);\n      }\n\n      return _addressChecker;\n    }()\n  }]);\n\n  return Keeper;\n}();\n\nexport { Keeper as default };","map":{"version":3,"sources":["/usr/local/var/www/neutrino-web/src/components/dal/Keeper.js"],"names":["require","waitForTx","broadcast","_isString","_isInteger","_isObject","Keeper","dal","onUpdate","fee","_isAvailable","_address","_pageStart","_checkerInterval","_addressChecker","bind","clearInterval","getAddress","setInterval","getPlugin","keeper","publicState","userData","account","getAccount","address","checker","resolve","window","WavesKeeper","setTimeout","pairName","contractName","method","args","paymentCurrency","paymentAmount","waitTx","dApp","contracts","console","log","signAndPublishTransaction","_buildTransaction","result","tx","JSON","parse","id","apiBase","nodeUrl","timeout","then","signTransaction","transaction","type","data","assetId","tokens","String","call","map","item","value","payment","process","env","NODE_ENV"],"mappings":"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","sourcesContent":["const {waitForTx, broadcast} = require('@waves/waves-transactions');\nconst _isString = require('lodash/isString');\nconst _isInteger = require('lodash/isInteger');\nconst _isObject = require('lodash/isObject');\n\nexport default class Keeper {\n\n    constructor(dal) {\n        this.dal = dal;\n        this.onUpdate = null;\n        this.fee = 0.009;\n\n        this._isAvailable = null;\n        this._address = null;\n        this._pageStart = Date.now();\n        this._checkerInterval = null;\n\n        this._addressChecker = this._addressChecker.bind(this);\n    }\n\n    async start() {\n        if (this._checkerInterval) {\n            clearInterval(this._checkerInterval);\n        }\n\n        this._address = await this.getAddress();\n\n        this._checkerInterval = setInterval(this._addressChecker, 1000);\n    }\n\n    stop() {\n        this._address = null;\n\n        if (this._checkerInterval) {\n            clearInterval(this._checkerInterval);\n        }\n    }\n\n    async isInstalled() {\n        const keeper = await this.getPlugin();\n        return !!keeper;\n    }\n\n    async getAccount() {\n        const keeper = await this.getPlugin();\n        if (!keeper) {\n            return null;\n        }\n\n        try {\n            const userData = await keeper.publicState();\n            return userData.account;\n        } catch {\n            return null;\n        }\n    }\n\n    async getAddress() {\n        const account = await this.getAccount();\n\n        if (!account) {\n            return null;\n        }\n\n        return account.address;\n    }\n\n    /**\n     * Get WavesKeeper from window\n     * @returns {Promise}\n     */\n    async getPlugin() {\n        const checker = resolve => {\n            if (this._isAvailable === true || (Date.now() - this._pageStart > 2000 && window.WavesKeeper && window.WavesKeeper.publicState)) {\n                this._isAvailable = true;\n                setTimeout(() => resolve(window.WavesKeeper));\n\n            } else if (this._isAvailable === false || Date.now() - this._pageStart > 5000) {\n                this._isAvailable = false;\n                resolve(null);\n            }\n            else if (this._isAvailable === null) {\n                setTimeout(() => checker(resolve), 100);\n            }\n        };\n        return new Promise(checker);\n    }\n\n    /**\n     *\n     * @param {string} pairName\n     * @param {string} contractName\n     * @param {string} method\n     * @param {array} args\n     * @param {string} paymentCurrency\n     * @param {number} paymentAmount\n     * @param {boolean} waitTx\n     * @returns {Promise}\n     */\n    async sendTransaction(pairName, contractName, method, args, paymentCurrency, paymentAmount, waitTx = true) {\n        const keeper = await this.getPlugin();\n        const dApp = this.dal.contracts[pairName][contractName];\n        console.log(this.dal.contracts)\n        const result = await keeper.signAndPublishTransaction(this._buildTransaction(dApp, method, args, paymentCurrency, paymentAmount));\n        if (result) {\n            if (!waitTx) {\n                return result;\n            }\n\n            const tx = JSON.parse(result);\n            return waitForTx(tx.id, {\n                apiBase: this.dal.nodeUrl,\n                timeout: 10000,\n            }).then(() => result);\n        }\n        return result;\n\n    }\n\n    async signTransaction(pairName, contractName, method, args, paymentCurrency, paymentAmount) {\n        const keeper = await this.getPlugin();\n        const dApp = this.dal.contracts[pairName][contractName];\n        return keeper.signTransaction(this._buildTransaction(dApp, method, args, paymentCurrency, paymentAmount));\n    }\n\n    _buildTransaction(dApp, method, args, paymentCurrency, paymentAmount) {\n        const transaction = {\n            type: 16,\n            data: {\n                fee: {\n                    assetId: 'WAVES',\n                    tokens: String(this.fee),\n                },\n                dApp,\n                call: {\n                    args: args.map(item => ({\n                        type: _isInteger(item) ? 'integer' : 'string',\n                        value: _isObject(item) ? JSON.stringify(item) : item,\n                    })),\n                    function: method\n                },\n                payment: !paymentAmount ? [] : [\n                    {\n                        assetId: paymentCurrency || 'WAVES',\n                        tokens: String(paymentAmount),\n                    }\n                ],\n            },\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            console.log('Transaction:', transaction); // eslint-disable-line no-console\n        }\n        return transaction;\n    }\n\n    async broadcastAndWait(tx) {\n        if (_isString(tx)) {\n            tx = JSON.parse(tx);\n        }\n        await broadcast(tx, this.dal.nodeUrl);\n        await waitForTx(tx.id, { apiBase: this.dal.nodeUrl });\n    }\n    async broadcast(tx) {\n        if (_isString(tx)) {\n            tx = JSON.parse(tx);\n        }\n        return broadcast(tx, this.dal.nodeUrl);\n    }\n\n    async waitForTx(tx) {\n        if (_isString(tx)) {\n            tx = JSON.parse(tx);\n        }\n        return waitForTx(tx.id, { apiBase: this.dal.nodeUrl });\n    }\n\n    async _addressChecker() {\n        // Get next address\n\n        const address = await this.getAddress();\n\n        if (this._address && address && this._address !== address) {\n            this._address = address;\n\n            if (this.onUpdate) {\n                this.onUpdate(this._address);\n            }\n        }\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}