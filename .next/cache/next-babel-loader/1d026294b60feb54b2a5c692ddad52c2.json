{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _get from 'lodash-es/get';\nimport _isEmpty from 'lodash-es/isEmpty';\nimport _isEqual from 'lodash-es/isEqual';\nimport { matchPath } from 'react-router';\nimport { ROUTING_REGISTER } from '../actions/routing';\nexport var LOCATION_CHANGE = '@@router/LOCATION_CHANGE';\nvar initialState = {\n  location: null,\n  action: null,\n  routes: []\n};\nvar routesCache = {};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      return _objectSpread({}, state, {\n        location: action.payload\n      });\n\n    case ROUTING_REGISTER:\n      return _objectSpread({}, state, {\n        routes: action.routes.map(function (item) {\n          return {\n            id: item.id,\n            exact: item.exact,\n            strict: item.strict,\n            path: item.path\n          };\n        })\n      });\n  }\n\n  return state;\n});\nexport var getCurrentRoute = function getCurrentRoute(state) {\n  if (!state || _isEmpty(state)) {\n    return null;\n  }\n\n  var currentRoute = null;\n\n  var pathname = _get(state, 'routing.location.pathname');\n\n  state.routing.routes.forEach(function (route) {\n    if (currentRoute) {\n      return;\n    }\n\n    var match = matchPath(pathname, route);\n\n    var finedRoute = match && _objectSpread({\n      id: route.id\n    }, match);\n\n    if (finedRoute) {\n      if (!routesCache[route.id] || !_isEqual(routesCache[route.id], finedRoute)) {\n        routesCache[route.id] = finedRoute;\n      }\n\n      currentRoute = routesCache[route.id];\n    }\n  });\n  return currentRoute;\n};","map":null,"metadata":{},"sourceType":"module"}