{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _media;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SCREEN_SET_WIDTH, SCREEN_SET_MEDIA } from '../actions/screen';\nexport var SCREE_PHONE = 'phone';\nexport var SCREEN_TABLET = 'tablet';\nexport var SCREEN_DESKTOP = 'desktop';\nvar initialState = {\n  width: 1280,\n  media: (_media = {}, _defineProperty(_media, SCREE_PHONE, 320), _defineProperty(_media, SCREEN_TABLET, 768), _defineProperty(_media, SCREEN_DESKTOP, 1024), _media)\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SCREEN_SET_WIDTH:\n      return _objectSpread({}, state, {\n        width: action.width\n      });\n\n    case SCREEN_SET_MEDIA:\n      return _objectSpread({}, state, {\n        media: _objectSpread({}, state.media, {}, action.media)\n      });\n  }\n\n  return state;\n});\nexport var getDeviceType = function getDeviceType(state) {\n  if (state.screen.width < state.screen.media[SCREEN_TABLET]) {\n    return SCREE_PHONE;\n  }\n\n  if (state.screen.width < state.screen.media[SCREEN_DESKTOP]) {\n    return SCREEN_TABLET;\n  }\n\n  return SCREEN_DESKTOP;\n};\nexport var isPhone = function isPhone(state) {\n  return getDeviceType(state) === SCREE_PHONE;\n};\nexport var isTablet = function isTablet(state) {\n  return getDeviceType(state) === SCREEN_TABLET;\n};\nexport var isDesktop = function isDesktop(state) {\n  return getDeviceType(state) === SCREEN_DESKTOP;\n};","map":{"version":3,"sources":["/usr/local/var/www/neutrino-web/node_modules/yii-steroids/reducers/screen.js"],"names":["SCREEN_SET_WIDTH","SCREEN_SET_MEDIA","SCREE_PHONE","SCREEN_TABLET","SCREEN_DESKTOP","initialState","width","media","state","action","type","getDeviceType","screen","isPhone","isTablet","isDesktop"],"mappings":";;;;;;;;;;;;;;AAAA,SAAQA,gBAAR,EAA0BC,gBAA1B,QAAiD,mBAAjD;AAEA,OAAO,IAAMC,WAAW,GAAG,OAApB;AACP,OAAO,IAAMC,aAAa,GAAG,QAAtB;AACP,OAAO,IAAMC,cAAc,GAAG,SAAvB;AAEP,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,KAAK,wCACAL,WADA,EACc,GADd,2BAEAC,aAFA,EAEgB,GAFhB,2BAGAC,cAHA,EAGiB,IAHjB;AAFY,CAArB;AASA,gBAAe,YAAkC;AAAA,MAAjCI,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,gBAAL;AACI,+BACOQ,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAFlB;;AAIJ,SAAKL,gBAAL;AACI,+BACOO,KADP;AAEID,QAAAA,KAAK,oBACEC,KAAK,CAACD,KADR,MAEEE,MAAM,CAACF,KAFT;AAFT;AAPR;;AAgBA,SAAOC,KAAP;AACH,CAlBD;AAoBA,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAAH,KAAK,EAAI;AAClC,MAAIA,KAAK,CAACI,MAAN,CAAaN,KAAb,GAAqBE,KAAK,CAACI,MAAN,CAAaL,KAAb,CAAmBJ,aAAnB,CAAzB,EAA4D;AACxD,WAAOD,WAAP;AACH;;AACD,MAAIM,KAAK,CAACI,MAAN,CAAaN,KAAb,GAAqBE,KAAK,CAACI,MAAN,CAAaL,KAAb,CAAmBH,cAAnB,CAAzB,EAA6D;AACzD,WAAOD,aAAP;AACH;;AACD,SAAOC,cAAP;AACH,CARM;AASP,OAAO,IAAMS,OAAO,GAAG,SAAVA,OAAU,CAAAL,KAAK;AAAA,SAAIG,aAAa,CAACH,KAAD,CAAb,KAAyBN,WAA7B;AAAA,CAArB;AACP,OAAO,IAAMY,QAAQ,GAAG,SAAXA,QAAW,CAAAN,KAAK;AAAA,SAAIG,aAAa,CAACH,KAAD,CAAb,KAAyBL,aAA7B;AAAA,CAAtB;AACP,OAAO,IAAMY,SAAS,GAAG,SAAZA,SAAY,CAAAP,KAAK;AAAA,SAAIG,aAAa,CAACH,KAAD,CAAb,KAAyBJ,cAA7B;AAAA,CAAvB","sourcesContent":["import {SCREEN_SET_WIDTH, SCREEN_SET_MEDIA} from '../actions/screen';\n\nexport const SCREE_PHONE = 'phone';\nexport const SCREEN_TABLET = 'tablet';\nexport const SCREEN_DESKTOP = 'desktop';\n\nconst initialState = {\n    width: 1280,\n    media: {\n        [SCREE_PHONE]: 320,\n        [SCREEN_TABLET]: 768,\n        [SCREEN_DESKTOP]: 1024,\n    }\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SCREEN_SET_WIDTH:\n            return {\n                ...state,\n                width: action.width,\n            };\n        case SCREEN_SET_MEDIA:\n            return {\n                ...state,\n                media: {\n                    ...state.media,\n                    ...action.media,\n                },\n            };\n    }\n\n    return state;\n};\n\nexport const getDeviceType = state => {\n    if (state.screen.width < state.screen.media[SCREEN_TABLET]) {\n        return SCREE_PHONE;\n    }\n    if (state.screen.width < state.screen.media[SCREEN_DESKTOP]) {\n        return SCREEN_TABLET;\n    }\n    return SCREEN_DESKTOP;\n};\nexport const isPhone = state => getDeviceType(state) === SCREE_PHONE;\nexport const isTablet = state => getDeviceType(state) === SCREEN_TABLET;\nexport const isDesktop = state => getDeviceType(state) === SCREEN_DESKTOP;\n"]},"metadata":{},"sourceType":"module"}