{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport queryString from 'query-string';\nimport _isArray from 'lodash-es/isArray';\nexport default class ResourceComponent {\n  constructor() {\n    this.googleApiKey = '';\n    this.googleCaptchaSiteKey = '';\n    this._callbacks = {};\n  }\n\n  loadGoogleMapApi() {\n    const locale = require('components').locale;\n\n    if (window.google && window.google.maps) {\n      return _Promise.resolve(window.google.maps);\n    }\n\n    return this.loadScript(ResourceComponent.RESOURCE_GOOGLE_MAP_API, {\n      libraries: 'places',\n      key: this.googleApiKey,\n      language: locale.language\n    }, () => window.google.maps);\n  }\n\n  loadYandexMap() {\n    const locale = require('components').locale;\n\n    if (window.ymaps) {\n      return new _Promise(resolve => window.ymaps.ready(() => resolve(window.ymaps)));\n    }\n\n    return this.loadScript(ResourceComponent.RESOURCE_YANDEX_MAP_API, {\n      lang: locale.language\n    }, () => new _Promise(resolve => window.ymaps.ready(() => resolve(window.ymaps))));\n  }\n\n  loadTwitterWidget() {\n    if (window.twttr) {\n      return _Promise.resolve(window.twttr);\n    }\n\n    return this.loadScript(ResourceComponent.RESOURCE_TWITTER_WIDGET, {}, () => new _Promise(resolve => window.twttr.ready(() => resolve(window.twttr))));\n  }\n\n  loadGeetest() {\n    if (window.initGeetest) {\n      return _Promise.resolve(window.initGeetest);\n    }\n\n    return this.loadScript(ResourceComponent.RESOURCE_GEETEST_API + '?_t=' + new Date().getTime(), {}, () => window.initGeetest);\n  }\n\n  loadScript(url, params, firstResolver) {\n    if (this._callbacks[url] === true) {\n      return _Promise.resolve(firstResolver());\n    }\n\n    if (_isArray(this._callbacks[url])) {\n      return new _Promise(resolve => {\n        this._callbacks[url].push(resolve);\n      });\n    }\n\n    this._callbacks[url] = []; // Append script to page\n\n    return new _Promise((resolve, reject) => {\n      let script = document.createElement('script');\n      script.async = true;\n\n      script.onload = () => {\n        setTimeout(() => {\n          _Promise.resolve(firstResolver()).then(result => {\n            // Resolve current\n            resolve(result); // Resolve queue promises after current\n\n            const callbacks = this._callbacks[url];\n            this._callbacks[url] = true;\n            callbacks.forEach(callback => callback(result));\n          }).catch(reject);\n        });\n      };\n\n      script.src = url + (params ? '?' + queryString.stringify(params) : '');\n      document.body.appendChild(script);\n    });\n  }\n\n  wait(condition, timeout = 5000) {\n    const start = _Date$now();\n\n    const checker = (resolve, reject) => {\n      const result = condition();\n\n      if (result) {\n        resolve(result);\n      } else if (start + timeout > _Date$now()) {\n        reject();\n      } else {\n        setTimeout(() => checker(resolve, reject), 500);\n      }\n    };\n\n    return new _Promise(checker);\n  }\n\n}\n\n_defineProperty(ResourceComponent, \"RESOURCE_GOOGLE_MAP_API\", '//maps.googleapis.com/maps/api/js');\n\n_defineProperty(ResourceComponent, \"RESOURCE_YANDEX_MAP_API\", 'https://api-maps.yandex.ru/2.1/');\n\n_defineProperty(ResourceComponent, \"RESOURCE_TWITTER_WIDGET\", 'https://platform.twitter.com/widgets.js');\n\n_defineProperty(ResourceComponent, \"RESOURCE_GEETEST_API\", '//static.geetest.com/static/tools/gt.js');","map":null,"metadata":{},"sourceType":"module"}