{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/usr/local/var/www/neutrino-web/src/components/dal/apiHoc.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport _isEqual from 'lodash-es/isEqual';\nimport { apiAddConfigs, apiRemoveConfigs, getConfigId } from '../../actions/api';\nimport { connect } from 'react-redux';\n\nvar stateMap = function stateMap(state) {\n  return {\n    apiData: state.api && state.api.data || null\n  };\n};\n\nexport default (function (configsFunc) {\n  return function (WrappedComponent) {\n    var _class, _temp;\n\n    return connect(stateMap)((_temp = _class =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(ApiHOC, _React$Component);\n\n      function ApiHOC() {\n        var _this;\n\n        _classCallCheck(this, ApiHOC);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ApiHOC).apply(this, arguments));\n        _this.state = {\n          overwritedProps: null\n        };\n        _this._onUpdate = _this._onUpdate.bind(_assertThisInitialized(_this));\n        return _this;\n      }\n\n      _createClass(ApiHOC, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this.props.dispatch(apiAddConfigs(configsFunc(_objectSpread({}, this.props, {}, this.state.overwritedProps))));\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.props.dispatch(apiRemoveConfigs(configsFunc(_objectSpread({}, this.props, {}, this.state.overwritedProps))));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps, prevState) {\n          var prevConfigs = [].concat(configsFunc(_objectSpread({}, prevProps, {}, prevState.overwritedProps)));\n          var nextConfigs = [].concat(configsFunc(_objectSpread({}, this.props, {}, this.state.overwritedProps)));\n\n          for (var i = 0; i < Math.max(prevConfigs.length, nextConfigs.length); i++) {\n            if (!_isEqual(prevConfigs[i], nextConfigs[i])) {\n              this.props.dispatch([apiRemoveConfigs(prevConfigs[i]), apiAddConfigs(nextConfigs[i])]);\n            }\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this2 = this;\n\n          var data = {};\n\n          if (this.props.apiData) {\n            [].concat(configsFunc(_objectSpread({}, this.props, {}, this.state.overwritedProps))).forEach(function (config) {\n              data[config.key] = _this2.props.apiData[getConfigId(config)];\n            });\n          }\n\n          return __jsx(WrappedComponent, _extends({}, this.props, this.state.overwritedProps, data, {\n            updateApiConfig: this._onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }));\n        }\n      }, {\n        key: \"_onUpdate\",\n        value: function _onUpdate(overwritedProps) {\n          this.setState({\n            overwritedProps: overwritedProps\n          });\n        }\n      }]);\n\n      return ApiHOC;\n    }(React.Component), _defineProperty(_class, \"WrappedComponent\", WrappedComponent), _temp));\n  };\n});","map":{"version":3,"sources":["/usr/local/var/www/neutrino-web/src/components/dal/apiHoc.js"],"names":["React","_isEqual","apiAddConfigs","apiRemoveConfigs","getConfigId","connect","stateMap","state","apiData","api","data","configsFunc","WrappedComponent","arguments","overwritedProps","_onUpdate","bind","props","dispatch","prevProps","prevState","prevConfigs","concat","nextConfigs","i","Math","max","length","forEach","config","key","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _isEqual from 'lodash-es/isEqual';\n\nimport {apiAddConfigs, apiRemoveConfigs, getConfigId} from '../../actions/api';\nimport {connect} from 'react-redux';\n\nconst stateMap = state => ({\n    apiData: state.api && state.api.data || null,\n});\n\nexport default configsFunc => WrappedComponent => connect(stateMap)(\n    class ApiHOC extends React.Component {\n\n        static WrappedComponent = WrappedComponent;\n    \n        constructor() {\n            super(...arguments);\n    \n            this.state = {\n                overwritedProps: null,\n            };\n    \n            this._onUpdate = this._onUpdate.bind(this);\n        }\n    \n        componentDidMount() {\n            this.props.dispatch(apiAddConfigs(configsFunc({...this.props, ...this.state.overwritedProps})));\n        }\n    \n        componentWillUnmount() {\n            this.props.dispatch(apiRemoveConfigs(configsFunc({...this.props, ...this.state.overwritedProps})));\n        }\n    \n        componentDidUpdate(prevProps, prevState) {\n            const prevConfigs = [].concat(configsFunc({...prevProps, ...prevState.overwritedProps}));\n            const nextConfigs = [].concat(configsFunc({...this.props, ...this.state.overwritedProps}));\n            for (let i = 0; i < Math.max(prevConfigs.length, nextConfigs.length); i++) {\n                if (!_isEqual(prevConfigs[i], nextConfigs[i])) {\n                    this.props.dispatch([\n                        apiRemoveConfigs(prevConfigs[i]),\n                        apiAddConfigs(nextConfigs[i]),\n                    ]);\n                }\n            }\n        }\n    \n        render() {\n            const data = {};\n            if (this.props.apiData) {\n                [].concat(configsFunc({...this.props, ...this.state.overwritedProps})).forEach(config => {\n                    data[config.key] = this.props.apiData[getConfigId(config)];\n                });\n            }\n    \n            return (\n                <WrappedComponent\n                    {...this.props}\n                    {...this.state.overwritedProps}\n                    {...data}\n                    updateApiConfig={this._onUpdate}\n                />\n            );\n        }\n    \n        _onUpdate(overwritedProps) {\n            this.setState({overwritedProps});\n        }\n    \n    }\n);"]},"metadata":{},"sourceType":"module"}