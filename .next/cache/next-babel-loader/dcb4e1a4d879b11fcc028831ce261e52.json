{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _isFunction from 'lodash-es/isFunction';\nimport _isObject from 'lodash-es/isObject';\n\nvar UiComponent =\n/*#__PURE__*/\nfunction () {\n  function UiComponent() {\n    _classCallCheck(this, UiComponent);\n\n    this.fields = {};\n    this.formatters = {};\n    this.security = {};\n    this._components = {};\n  }\n\n  _createClass(UiComponent, [{\n    key: \"addViews\",\n    value: function addViews(components) {\n      this._add('views', components);\n    }\n  }, {\n    key: \"getView\",\n    value: function getView(path) {\n      return this._getComponent('views', path);\n    }\n  }, {\n    key: \"addFields\",\n    value: function addFields(components) {\n      this._add('fields', components);\n    }\n  }, {\n    key: \"getField\",\n    value: function getField(path) {\n      return this._getComponent('fields', path);\n    }\n  }, {\n    key: \"getFieldProps\",\n    value: function getFieldProps(path) {\n      return this._getPropsConfig('fields', path);\n    }\n  }, {\n    key: \"addFormatters\",\n    value: function addFormatters(components) {\n      this._add('formatters', components);\n    }\n  }, {\n    key: \"getFormatter\",\n    value: function getFormatter(path) {\n      return this._getComponent('formatters', path);\n    }\n  }, {\n    key: \"getFormatterProps\",\n    value: function getFormatterProps(path) {\n      return this._getPropsConfig('formatters', path);\n    }\n  }, {\n    key: \"addSecurity\",\n    value: function addSecurity(components) {\n      this._add('security', components);\n    }\n  }, {\n    key: \"getSecurity\",\n    value: function getSecurity(path) {\n      return this._getComponent('security', path);\n    }\n  }, {\n    key: \"getSecurityProps\",\n    value: function getSecurityProps(path) {\n      return this._getPropsConfig('security', path);\n    }\n  }, {\n    key: \"_add\",\n    value: function _add(group, items) {\n      var _this = this;\n\n      // require.context()\n      if (_isFunction(items) && _isFunction(items.keys)) {\n        items.keys().forEach(function (fileName) {\n          var matches = fileName.match(/^\\.\\/(.*\\/)?[^\\/]+\\/([^\\/]+)\\.js$/);\n          var path = (matches[1] || '').replace(/\\//g, '.') + matches[2];\n          _this._components[group] = _this._components[group] || {};\n          _this._components[group][path] = items(fileName)[\"default\"];\n        });\n      } else if (_isObject(items)) {\n        // object\n        this._components[group] = _objectSpread({}, this._components[group], {}, items);\n      } else {\n        throw new Error(\"Unsupported \".concat(group, \" format for add component.\"));\n      }\n    }\n  }, {\n    key: \"_getComponent\",\n    value: function _getComponent(group, path) {\n      if (!this._components[group] || !this._components[group][path]) {\n        throw new Error(\"Not found '\".concat(group, \"' by path '\").concat(path, \"'.\"));\n      }\n\n      return this._components[group][path];\n    }\n  }, {\n    key: \"_getPropsConfig\",\n    value: function _getPropsConfig(group, path) {\n      return this[group] && this[group][path] || null;\n    }\n  }]);\n\n  return UiComponent;\n}();\n\nexport { UiComponent as default };","map":null,"metadata":{},"sourceType":"module"}