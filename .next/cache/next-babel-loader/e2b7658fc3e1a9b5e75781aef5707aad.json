{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar WebSocketClient =\n/*#__PURE__*/\nfunction () {\n  function WebSocketClient() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, WebSocketClient);\n\n    this.wsUrl = params.wsUrl || null;\n    this.onOpen = params.onOpen || null;\n    this.onClose = params.onClose || null;\n    this.onMessage = params.onMessage || null;\n    this._connection = null;\n    this._tryCount = null;\n    this._connect = this._connect.bind(this);\n    this._onOpen = this._onOpen.bind(this);\n    this._onMessage = this._onMessage.bind(this);\n    this._onClose = this._onClose.bind(this);\n  }\n\n  _createClass(WebSocketClient, [{\n    key: \"open\",\n    value: function open() {\n      // Close previous\n      this.close();\n\n      this._connect();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._connection) {\n        this._connection.close();\n      }\n    }\n  }, {\n    key: \"_connect\",\n    value: function _connect() {\n      this._connection = new WebSocket(this.wsUrl);\n      this._connection.onopen = this._onOpen;\n      this._connection.onmessage = this._onMessage;\n      this._connection.onclose = this._onClose;\n    }\n  }, {\n    key: \"_reConnect\",\n    value: function _reConnect() {\n      var delay = 1000;\n\n      if (this._tryCount > 10) {\n        delay = 2000;\n      }\n\n      if (this._tryCount > 50) {\n        delay = 5000;\n      }\n\n      if (this._tryCount > 100) {\n        delay = 15000;\n      }\n\n      this._tryCount++;\n      setTimeout(this._connect, delay);\n    }\n  }, {\n    key: \"_onOpen\",\n    value: function _onOpen() {\n      this._tryCount = 0;\n\n      if (this.onOpen) {\n        this.onOpen();\n      }\n    }\n  }, {\n    key: \"_onMessage\",\n    value: function _onMessage(message) {\n      if (this.onMessage) {\n        this.onMessage(JSON.parse(message.data));\n      }\n    }\n  }, {\n    key: \"_onClose\",\n    value: function _onClose(event) {\n      if (this.onClose) {\n        this.onClose(event);\n      }\n\n      this._reConnect();\n    }\n  }]);\n\n  return WebSocketClient;\n}();\n\nexport { WebSocketClient as default };\n;","map":{"version":3,"sources":["/usr/local/var/www/neutrino-web/src/components/WebSocketClient.js"],"names":["WebSocketClient","params","wsUrl","onOpen","onClose","onMessage","_connection","_tryCount","_connect","bind","_onOpen","_onMessage","_onClose","close","WebSocket","onopen","onmessage","onclose","delay","setTimeout","message","JSON","parse","data","event","_reConnect"],"mappings":";;;IAAqBA,e;;;AAEjB,6BAAyB;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AACrB,SAAKC,KAAL,GAAaD,MAAM,CAACC,KAAP,IAAgB,IAA7B;AACA,SAAKC,MAAL,GAAcF,MAAM,CAACE,MAAP,IAAiB,IAA/B;AACA,SAAKC,OAAL,GAAeH,MAAM,CAACG,OAAP,IAAkB,IAAjC;AACA,SAAKC,SAAL,GAAiBJ,MAAM,CAACI,SAAP,IAAoB,IAArC;AAEA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AAEA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACH;;;;2BAEM;AACH;AACA,WAAKI,KAAL;;AAEA,WAAKL,QAAL;AACH;;;4BAEO;AACJ,UAAI,KAAKF,WAAT,EAAsB;AAClB,aAAKA,WAAL,CAAiBO,KAAjB;AACH;AACJ;;;+BAEU;AACP,WAAKP,WAAL,GAAmB,IAAIQ,SAAJ,CAAc,KAAKZ,KAAnB,CAAnB;AACA,WAAKI,WAAL,CAAiBS,MAAjB,GAA0B,KAAKL,OAA/B;AACA,WAAKJ,WAAL,CAAiBU,SAAjB,GAA6B,KAAKL,UAAlC;AACA,WAAKL,WAAL,CAAiBW,OAAjB,GAA2B,KAAKL,QAAhC;AACH;;;iCAEY;AACT,UAAIM,KAAK,GAAG,IAAZ;;AACA,UAAI,KAAKX,SAAL,GAAiB,EAArB,EAAyB;AACrBW,QAAAA,KAAK,GAAG,IAAR;AACH;;AACD,UAAI,KAAKX,SAAL,GAAiB,EAArB,EAAyB;AACrBW,QAAAA,KAAK,GAAG,IAAR;AACH;;AACD,UAAI,KAAKX,SAAL,GAAiB,GAArB,EAA0B;AACtBW,QAAAA,KAAK,GAAG,KAAR;AACH;;AAED,WAAKX,SAAL;AACAY,MAAAA,UAAU,CAAC,KAAKX,QAAN,EAAgBU,KAAhB,CAAV;AACH;;;8BAES;AACN,WAAKX,SAAL,GAAiB,CAAjB;;AAEA,UAAI,KAAKJ,MAAT,EAAiB;AACb,aAAKA,MAAL;AACH;AACJ;;;+BAEUiB,O,EAAS;AAChB,UAAI,KAAKf,SAAT,EAAoB;AAChB,aAAKA,SAAL,CAAegB,IAAI,CAACC,KAAL,CAAWF,OAAO,CAACG,IAAnB,CAAf;AACH;AACJ;;;6BAEQC,K,EAAO;AACZ,UAAI,KAAKpB,OAAT,EAAkB;AACd,aAAKA,OAAL,CAAaoB,KAAb;AACH;;AAED,WAAKC,UAAL;AACH;;;;;;SAzEgBzB,e;AA0EpB","sourcesContent":["export default class WebSocketClient {\n\n    constructor(params = {}) {\n        this.wsUrl = params.wsUrl || null;\n        this.onOpen = params.onOpen || null;\n        this.onClose = params.onClose || null;\n        this.onMessage = params.onMessage || null;\n\n        this._connection = null;\n        this._tryCount = null;\n\n        this._connect = this._connect.bind(this);\n        this._onOpen = this._onOpen.bind(this);\n        this._onMessage = this._onMessage.bind(this);\n        this._onClose = this._onClose.bind(this);\n    }\n\n    open() {\n        // Close previous\n        this.close();\n\n        this._connect();\n    }\n\n    close() {\n        if (this._connection) {\n            this._connection.close();\n        }\n    }\n\n    _connect() {\n        this._connection = new WebSocket(this.wsUrl);\n        this._connection.onopen = this._onOpen;\n        this._connection.onmessage = this._onMessage;\n        this._connection.onclose = this._onClose;\n    }\n\n    _reConnect() {\n        let delay = 1000;\n        if (this._tryCount > 10) {\n            delay = 2000;\n        }\n        if (this._tryCount > 50) {\n            delay = 5000;\n        }\n        if (this._tryCount > 100) {\n            delay = 15000;\n        }\n\n        this._tryCount++;\n        setTimeout(this._connect, delay);\n    }\n\n    _onOpen() {\n        this._tryCount = 0;\n\n        if (this.onOpen) {\n            this.onOpen();\n        }\n    }\n\n    _onMessage(message) {\n        if (this.onMessage) {\n            this.onMessage(JSON.parse(message.data));\n        }\n    }\n\n    _onClose(event) {\n        if (this.onClose) {\n            this.onClose(event);\n        }\n\n        this._reConnect();\n    }\n};\n"]},"metadata":{},"sourceType":"module"}