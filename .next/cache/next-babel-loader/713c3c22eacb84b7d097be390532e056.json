{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport cookie from 'js-cookie';\n\nvar ClientStorageComponent =\n/*#__PURE__*/\nfunction () {\n  function ClientStorageComponent() {\n    _classCallCheck(this, ClientStorageComponent);\n\n    this.localStorageAvailable = true;\n    this.sessionStorageAvailable = true;\n\n    try {\n      window.localStorage.setItem('localStorageAvailable', true);\n      window.localStorage.removeItem('localStorageAvailable');\n    } catch (e) {\n      this.localStorageAvailable = false;\n    }\n\n    try {\n      window.sessionStorage.setItem('sessionStorageAvailable', true);\n      window.sessionStorage.removeItem('sessionStorageAvailable');\n    } catch (e) {\n      this.sessionStorageAvailable = false;\n    }\n  }\n  /**\n   * @param {string} name\n   * @param {string} [storageName]\n   * @returns {*}\n   */\n\n\n  _createClass(ClientStorageComponent, [{\n    key: \"get\",\n    value: function get(name, storageName) {\n      storageName = storageName || this.STORAGE_LOCAL;\n\n      if (this.localStorageAvailable && storageName === this.STORAGE_LOCAL) {\n        return window.localStorage.getItem(name);\n      } else if (this.sessionStorageAvailable && storageName === this.STORAGE_SESSION) {\n        return window.sessionStorage.getItem(name);\n      }\n\n      return cookie.get(name);\n    }\n    /**\n     * @param {string} name\n     * @param {*} value\n     * @param {string} [storageName]\n     * @param {number|null} [expires]\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(name, value, storageName) {\n      var expires = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      storageName = storageName || this.STORAGE_LOCAL;\n\n      if (this.localStorageAvailable && storageName === this.STORAGE_LOCAL) {\n        window.localStorage.setItem(name, value);\n      } else if (this.sessionStorageAvailable && storageName === this.STORAGE_SESSION) {\n        window.sessionStorage.setItem(name, value);\n      } else {\n        cookie.set(name, value, {\n          expires: expires,\n          domain: this._getDomain()\n        });\n      }\n    }\n    /**\n     *\n     * @param {string} name\n     * @param {string} [storageName]\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(name, storageName) {\n      storageName = storageName || this.STORAGE_LOCAL;\n\n      if (this.localStorageAvailable && storageName === this.STORAGE_LOCAL) {\n        window.localStorage.removeItem(name);\n      } else if (this.sessionStorageAvailable && storageName === this.STORAGE_SESSION) {\n        window.sessionStorage.removeItem(name);\n      } else {\n        cookie.remove(name, {\n          domain: this._getDomain()\n        });\n      }\n    }\n  }, {\n    key: \"_getDomain\",\n    value: function _getDomain() {\n      var host = typeof location !== 'undefined' && location.hostname || '';\n      return host.split('.').slice(-2).join('.') || host;\n    }\n  }]);\n\n  return ClientStorageComponent;\n}();\n\n_defineProperty(ClientStorageComponent, \"STORAGE_SESSION\", 'session');\n\n_defineProperty(ClientStorageComponent, \"STORAGE_LOCAL\", 'local');\n\n_defineProperty(ClientStorageComponent, \"STORAGE_COOKIE\", 'cookie');\n\nexport { ClientStorageComponent as default };","map":null,"metadata":{},"sourceType":"module"}