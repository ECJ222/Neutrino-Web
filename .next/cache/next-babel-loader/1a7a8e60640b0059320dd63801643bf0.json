{"ast":null,"code":"export default class WebSocketClient {\n  constructor(params = {}) {\n    this.wsUrl = params.wsUrl || null;\n    this.onOpen = params.onOpen || null;\n    this.onClose = params.onClose || null;\n    this.onMessage = params.onMessage || null;\n    this._connection = null;\n    this._tryCount = null;\n    this._connect = this._connect.bind(this);\n    this._onOpen = this._onOpen.bind(this);\n    this._onMessage = this._onMessage.bind(this);\n    this._onClose = this._onClose.bind(this);\n  }\n\n  open() {\n    // Close previous\n    this.close();\n\n    this._connect();\n  }\n\n  close() {\n    if (this._connection) {\n      this._connection.close();\n    }\n  }\n\n  _connect() {\n    this._connection = new WebSocket(this.wsUrl);\n    this._connection.onopen = this._onOpen;\n    this._connection.onmessage = this._onMessage;\n    this._connection.onclose = this._onClose;\n  }\n\n  _reConnect() {\n    let delay = 1000;\n\n    if (this._tryCount > 10) {\n      delay = 2000;\n    }\n\n    if (this._tryCount > 50) {\n      delay = 5000;\n    }\n\n    if (this._tryCount > 100) {\n      delay = 15000;\n    }\n\n    this._tryCount++;\n    setTimeout(this._connect, delay);\n  }\n\n  _onOpen() {\n    this._tryCount = 0;\n\n    if (this.onOpen) {\n      this.onOpen();\n    }\n  }\n\n  _onMessage(message) {\n    if (this.onMessage) {\n      this.onMessage(JSON.parse(message.data));\n    }\n  }\n\n  _onClose(event) {\n    if (this.onClose) {\n      this.onClose(event);\n    }\n\n    this._reConnect();\n  }\n\n}\n;","map":{"version":3,"sources":["/usr/local/var/www/neutrino-web/src/components/WebSocketClient.js"],"names":["WebSocketClient","constructor","params","wsUrl","onOpen","onClose","onMessage","_connection","_tryCount","_connect","bind","_onOpen","_onMessage","_onClose","open","close","WebSocket","onopen","onmessage","onclose","_reConnect","delay","setTimeout","message","JSON","parse","data","event"],"mappings":"AAAA,eAAe,MAAMA,eAAN,CAAsB;AAEjCC,EAAAA,WAAW,CAACC,MAAM,GAAG,EAAV,EAAc;AACrB,SAAKC,KAAL,GAAaD,MAAM,CAACC,KAAP,IAAgB,IAA7B;AACA,SAAKC,MAAL,GAAcF,MAAM,CAACE,MAAP,IAAiB,IAA/B;AACA,SAAKC,OAAL,GAAeH,MAAM,CAACG,OAAP,IAAkB,IAAjC;AACA,SAAKC,SAAL,GAAiBJ,MAAM,CAACI,SAAP,IAAoB,IAArC;AAEA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AAEA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDI,EAAAA,IAAI,GAAG;AACH;AACA,SAAKC,KAAL;;AAEA,SAAKN,QAAL;AACH;;AAEDM,EAAAA,KAAK,GAAG;AACJ,QAAI,KAAKR,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBQ,KAAjB;AACH;AACJ;;AAEDN,EAAAA,QAAQ,GAAG;AACP,SAAKF,WAAL,GAAmB,IAAIS,SAAJ,CAAc,KAAKb,KAAnB,CAAnB;AACA,SAAKI,WAAL,CAAiBU,MAAjB,GAA0B,KAAKN,OAA/B;AACA,SAAKJ,WAAL,CAAiBW,SAAjB,GAA6B,KAAKN,UAAlC;AACA,SAAKL,WAAL,CAAiBY,OAAjB,GAA2B,KAAKN,QAAhC;AACH;;AAEDO,EAAAA,UAAU,GAAG;AACT,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKb,SAAL,GAAiB,EAArB,EAAyB;AACrBa,MAAAA,KAAK,GAAG,IAAR;AACH;;AACD,QAAI,KAAKb,SAAL,GAAiB,EAArB,EAAyB;AACrBa,MAAAA,KAAK,GAAG,IAAR;AACH;;AACD,QAAI,KAAKb,SAAL,GAAiB,GAArB,EAA0B;AACtBa,MAAAA,KAAK,GAAG,KAAR;AACH;;AAED,SAAKb,SAAL;AACAc,IAAAA,UAAU,CAAC,KAAKb,QAAN,EAAgBY,KAAhB,CAAV;AACH;;AAEDV,EAAAA,OAAO,GAAG;AACN,SAAKH,SAAL,GAAiB,CAAjB;;AAEA,QAAI,KAAKJ,MAAT,EAAiB;AACb,WAAKA,MAAL;AACH;AACJ;;AAEDQ,EAAAA,UAAU,CAACW,OAAD,EAAU;AAChB,QAAI,KAAKjB,SAAT,EAAoB;AAChB,WAAKA,SAAL,CAAekB,IAAI,CAACC,KAAL,CAAWF,OAAO,CAACG,IAAnB,CAAf;AACH;AACJ;;AAEDb,EAAAA,QAAQ,CAACc,KAAD,EAAQ;AACZ,QAAI,KAAKtB,OAAT,EAAkB;AACd,WAAKA,OAAL,CAAasB,KAAb;AACH;;AAED,SAAKP,UAAL;AACH;;AAzEgC;AA0EpC","sourcesContent":["export default class WebSocketClient {\n\n    constructor(params = {}) {\n        this.wsUrl = params.wsUrl || null;\n        this.onOpen = params.onOpen || null;\n        this.onClose = params.onClose || null;\n        this.onMessage = params.onMessage || null;\n\n        this._connection = null;\n        this._tryCount = null;\n\n        this._connect = this._connect.bind(this);\n        this._onOpen = this._onOpen.bind(this);\n        this._onMessage = this._onMessage.bind(this);\n        this._onClose = this._onClose.bind(this);\n    }\n\n    open() {\n        // Close previous\n        this.close();\n\n        this._connect();\n    }\n\n    close() {\n        if (this._connection) {\n            this._connection.close();\n        }\n    }\n\n    _connect() {\n        this._connection = new WebSocket(this.wsUrl);\n        this._connection.onopen = this._onOpen;\n        this._connection.onmessage = this._onMessage;\n        this._connection.onclose = this._onClose;\n    }\n\n    _reConnect() {\n        let delay = 1000;\n        if (this._tryCount > 10) {\n            delay = 2000;\n        }\n        if (this._tryCount > 50) {\n            delay = 5000;\n        }\n        if (this._tryCount > 100) {\n            delay = 15000;\n        }\n\n        this._tryCount++;\n        setTimeout(this._connect, delay);\n    }\n\n    _onOpen() {\n        this._tryCount = 0;\n\n        if (this.onOpen) {\n            this.onOpen();\n        }\n    }\n\n    _onMessage(message) {\n        if (this.onMessage) {\n            this.onMessage(JSON.parse(message.data));\n        }\n    }\n\n    _onClose(event) {\n        if (this.onClose) {\n            this.onClose(event);\n        }\n\n        this._reConnect();\n    }\n};\n"]},"metadata":{},"sourceType":"module"}