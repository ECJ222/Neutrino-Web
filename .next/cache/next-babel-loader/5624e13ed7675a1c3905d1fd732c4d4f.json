{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport * as reducers from 'yii-steroids/reducers';\nimport api from './api';\nimport currency from './currency';\nimport contractReducers from './contract';\nimport contractPriceReducers from './contract/prices';\nexport default (function (asyncReducers) {\n  return combineReducers(_objectSpread({\n    api: api,\n    currency: currency\n  }, reducers, {}, asyncReducers, {\n    contractData: contractReducers,\n    contractPrices: contractPriceReducers\n  }));\n});","map":{"version":3,"sources":["/usr/local/var/www/neutrino-web/src/reducers/index.js"],"names":["combineReducers","reducers","api","currency","contractReducers","contractPriceReducers","asyncReducers","contractData","contractPrices"],"mappings":";;;;;;;;;;;;AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,gBAAP,MAA6B,YAA7B;AACA,OAAOC,qBAAP,MAAkC,mBAAlC;AAEA,gBAAe,UAAAC,aAAa;AAAA,SAAIN,eAAe;AAC3CE,IAAAA,GAAG,EAAHA,GAD2C;AAE3CC,IAAAA,QAAQ,EAARA;AAF2C,KAGxCF,QAHwC,MAIxCK,aAJwC;AAK3CC,IAAAA,YAAY,EAAEH,gBAL6B;AAM3CI,IAAAA,cAAc,EAAEH;AAN2B,KAAnB;AAAA,CAA5B","sourcesContent":["import {combineReducers} from 'redux';\nimport * as reducers from 'yii-steroids/reducers';\nimport api from './api';\nimport currency from './currency';\nimport contractReducers from './contract';\nimport contractPriceReducers from './contract/prices';\n\nexport default asyncReducers => combineReducers({\n    api,\n    currency,\n    ...reducers,\n    ...asyncReducers,\n    contractData: contractReducers,\n    contractPrices: contractPriceReducers\n});\n"]},"metadata":{},"sourceType":"module"}