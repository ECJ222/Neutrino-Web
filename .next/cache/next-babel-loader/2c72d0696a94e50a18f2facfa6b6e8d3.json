{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar WebSocketClient =\n/*#__PURE__*/\nfunction () {\n  function WebSocketClient() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, WebSocketClient);\n\n    this.wsUrl = params.wsUrl || null;\n    this.onOpen = params.onOpen || null;\n    this.onClose = params.onClose || null;\n    this.onMessage = params.onMessage || null;\n    this._connection = null;\n    this._tryCount = null;\n    this._connect = this._connect.bind(this);\n    this._onOpen = this._onOpen.bind(this);\n    this._onMessage = this._onMessage.bind(this);\n    this._onClose = this._onClose.bind(this);\n  }\n\n  _createClass(WebSocketClient, [{\n    key: \"open\",\n    value: function open() {\n      // Close previous\n      this.close();\n\n      this._connect();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._connection) {\n        this._connection.close();\n      }\n    }\n  }, {\n    key: \"_connect\",\n    value: function _connect() {\n      this._connection = new WebSocket(this.wsUrl);\n      this._connection.onopen = this._onOpen;\n      this._connection.onmessage = this._onMessage;\n      this._connection.onclose = this._onClose;\n    }\n  }, {\n    key: \"_reConnect\",\n    value: function _reConnect() {\n      var delay = 1000;\n\n      if (this._tryCount > 10) {\n        delay = 2000;\n      }\n\n      if (this._tryCount > 50) {\n        delay = 5000;\n      }\n\n      if (this._tryCount > 100) {\n        delay = 15000;\n      }\n\n      this._tryCount++;\n      setTimeout(this._connect, delay);\n    }\n  }, {\n    key: \"_onOpen\",\n    value: function _onOpen() {\n      this._tryCount = 0;\n\n      if (this.onOpen) {\n        this.onOpen();\n      }\n    }\n  }, {\n    key: \"_onMessage\",\n    value: function _onMessage(message) {\n      if (this.onMessage) {\n        this.onMessage(JSON.parse(message.data));\n      }\n    }\n  }, {\n    key: \"_onClose\",\n    value: function _onClose(event) {\n      if (this.onClose) {\n        this.onClose(event);\n      }\n\n      this._reConnect();\n    }\n  }]);\n\n  return WebSocketClient;\n}();\n\nexport { WebSocketClient as default };\n;","map":null,"metadata":{},"sourceType":"module"}