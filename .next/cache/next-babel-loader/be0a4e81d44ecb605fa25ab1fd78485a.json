{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _isString from 'lodash-es/isString';\n\nvar HtmlComponent =\n/*#__PURE__*/\nfunction () {\n  function HtmlComponent() {\n    _classCallCheck(this, HtmlComponent);\n\n    this.namespace = '';\n  }\n\n  _createClass(HtmlComponent, [{\n    key: \"bem\",\n    value: function bem(blockName) {\n      var _this = this;\n\n      var bem = function () {\n        return this.classNames.apply(this, arguments);\n      }.bind(this);\n\n      bem.block = function (modifiers) {\n        return _this._applyModifiers(blockName, modifiers);\n      };\n\n      bem.element = function (elementName, modifiers) {\n        return _this._applyModifiers(blockName + '__' + elementName, modifiers);\n      };\n\n      return bem;\n    }\n  }, {\n    key: \"classNames\",\n    value: function classNames() {\n      return Array.prototype.slice.call(arguments).filter(function (v) {\n        return v;\n      }).join(' ');\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(node, className) {\n      if (node && _isString(node.className)) {\n        var classes = node.className.split(' ');\n\n        if (classes.indexOf(className) === -1) {\n          classes.push(className);\n          node.className = classes.join(' ');\n        }\n      }\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(node, className) {\n      if (node && _isString(node.className)) {\n        var classes = node.className.split(' ');\n        var index = classes.indexOf(className);\n\n        if (index !== -1) {\n          classes.splice(index, 1);\n          node.className = classes.join(' ');\n        }\n      }\n    }\n  }, {\n    key: \"closest\",\n    value: function closest(element, className) {\n      while ((element = element.parentElement) && !element.classList.contains(className)) {} // eslint-disable-line no-empty\n\n\n      return element;\n    }\n  }, {\n    key: \"_applyModifiers\",\n    value: function _applyModifiers(entity, modifiers) {\n      var _this2 = this;\n\n      var result = [];\n      result.push(entity);\n\n      if (typeof modifiers === 'string') {\n        result.push(entity + (modifiers ? '_' + modifiers : ''));\n      } else if (modifiers) {\n        _Object$keys(modifiers).forEach(function (key) {\n          var value = modifiers[key];\n\n          if (!value) {// Skip\n          } else if (value === true) {\n            result.push(entity + '_' + key);\n          } else {\n            result.push(entity + '_' + key + '_' + value);\n          }\n        });\n      } // Append namespace\n\n\n      result = result.map(function (cl) {\n        return _this2.namespace + cl;\n      });\n      return result.join(' ');\n    }\n  }]);\n\n  return HtmlComponent;\n}();\n\nexport { HtmlComponent as default };\n;","map":{"version":3,"sources":["/usr/local/var/www/neutrino-web/node_modules/yii-steroids/components/HtmlComponent.js"],"names":["_isString","HtmlComponent","namespace","blockName","bem","classNames","arguments","bind","block","modifiers","_applyModifiers","element","elementName","Array","prototype","slice","call","filter","v","join","node","className","classes","split","indexOf","push","index","splice","parentElement","classList","contains","entity","result","forEach","key","value","map","cl"],"mappings":"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","sourcesContent":["import _isString from 'lodash-es/isString';\n\nexport default class HtmlComponent {\n\n    constructor() {\n        this.namespace = '';\n    }\n\n    bem(blockName) {\n        const bem = function () {\n            return this.classNames(...arguments);\n        }.bind(this);\n        bem.block = modifiers => {\n            return this._applyModifiers(blockName, modifiers);\n        };\n        bem.element = (elementName, modifiers) => {\n            return this._applyModifiers(blockName + '__' + elementName, modifiers);\n        };\n        return bem;\n    }\n\n    classNames() {\n        return Array.prototype.slice.call(arguments).filter(v => v).join(' ');\n    }\n\n    addClass(node, className) {\n        if (node && _isString(node.className)) {\n            const classes = node.className.split(' ');\n            if (classes.indexOf(className) === -1) {\n                classes.push(className);\n                node.className = classes.join(' ');\n            }\n        }\n    }\n\n    removeClass(node, className) {\n        if (node && _isString(node.className)) {\n            const classes = node.className.split(' ');\n            const index = classes.indexOf(className);\n            if (index !== -1) {\n                classes.splice(index, 1);\n                node.className = classes.join(' ');\n            }\n        }\n    }\n\n    closest(element, className) {\n        while ((element = element.parentElement) && !element.classList.contains(className)) {} // eslint-disable-line no-empty\n        return element;\n    }\n\n    _applyModifiers(entity, modifiers) {\n        let result = [];\n        result.push(entity);\n\n        if (typeof modifiers === 'string') {\n            result.push(entity + (modifiers ? '_' + modifiers : ''));\n        } else if (modifiers) {\n            Object.keys(modifiers).forEach(key => {\n                const value = modifiers[key];\n                if (!value) {\n                    // Skip\n                }\n                else if (value === true) {\n                    result.push(entity + '_' + key);\n                }\n                else {\n                    result.push(entity + '_' + key + '_' + value);\n                }\n            });\n        }\n\n        // Append namespace\n        result = result.map(cl => this.namespace + cl);\n\n        return result.join(' ');\n    }\n\n};\n"]},"metadata":{},"sourceType":"module"}