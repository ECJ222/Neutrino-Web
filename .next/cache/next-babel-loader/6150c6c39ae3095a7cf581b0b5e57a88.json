{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _require = require('@waves/waves-transactions'),\n    _waitForTx = _require.waitForTx,\n    _broadcast = _require.broadcast;\n\nvar _isString = require('lodash/isString');\n\nvar _isInteger = require('lodash/isInteger');\n\nvar _isObject = require('lodash/isObject');\n\nvar Keeper =\n/*#__PURE__*/\nfunction () {\n  function Keeper(dal) {\n    _classCallCheck(this, Keeper);\n\n    _defineProperty(this, \"dal\", void 0);\n\n    _defineProperty(this, \"onUpdate\", void 0);\n\n    _defineProperty(this, \"fee\", void 0);\n\n    _defineProperty(this, \"_isAvailable\", void 0);\n\n    _defineProperty(this, \"_address\", void 0);\n\n    _defineProperty(this, \"_pageStart\", void 0);\n\n    _defineProperty(this, \"_checkerInterval\", void 0);\n\n    this.dal = dal;\n    this.onUpdate = null;\n    this.fee = 0.009;\n    this._isAvailable = null;\n    this._address = null;\n    this._pageStart = _Date$now();\n    this._checkerInterval = null;\n    this._buildTransaction = this._buildTransaction.bind(this);\n    this._addressChecker = this._addressChecker.bind(this);\n  }\n\n  _createClass(Keeper, [{\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this._checkerInterval) {\n                  clearInterval(this._checkerInterval);\n                }\n\n                _context.next = 3;\n                return this.getAddress();\n\n              case 3:\n                this._address = _context.sent;\n                // @ts-ignore\n                this._checkerInterval = setInterval(this._addressChecker, 1000);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this._address = null;\n\n      if (this._checkerInterval) {\n        clearInterval(this._checkerInterval);\n      }\n    }\n  }, {\n    key: \"isInstalled\",\n    value: function () {\n      var _isInstalled = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var keeper;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getPlugin();\n\n              case 2:\n                keeper = _context2.sent;\n                return _context2.abrupt(\"return\", !!keeper);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function isInstalled() {\n        return _isInstalled.apply(this, arguments);\n      }\n\n      return isInstalled;\n    }()\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var keeper, userData;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.getPlugin();\n\n              case 2:\n                keeper = _context3.sent;\n\n                if (keeper) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", null);\n\n              case 5:\n                _context3.prev = 5;\n                _context3.next = 8;\n                return keeper.publicState();\n\n              case 8:\n                userData = _context3.sent;\n                return _context3.abrupt(\"return\", userData.account);\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](5);\n                return _context3.abrupt(\"return\", null);\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[5, 12]]);\n      }));\n\n      function getAccount() {\n        return _getAccount.apply(this, arguments);\n      }\n\n      return getAccount;\n    }()\n  }, {\n    key: \"getAddress\",\n    value: function () {\n      var _getAddress = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var account;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.getAccount();\n\n              case 2:\n                account = _context4.sent;\n\n                if (account) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", null);\n\n              case 5:\n                return _context4.abrupt(\"return\", account.address);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getAddress() {\n        return _getAddress.apply(this, arguments);\n      }\n\n      return getAddress;\n    }()\n  }, {\n    key: \"getPlugin\",\n    value: function () {\n      var _getPlugin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var _this = this;\n\n        var checker;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                checker = function checker(resolve) {\n                  if (_this._isAvailable === true || _Date$now() - _this._pageStart > 2000 && window.WavesKeeper && window.WavesKeeper.publicState) {\n                    _this._isAvailable = true;\n                    setTimeout(function () {\n                      return resolve(window.WavesKeeper);\n                    });\n                  } else if (_this._isAvailable === false || _Date$now() - _this._pageStart > 5000) {\n                    _this._isAvailable = false;\n                    resolve(null);\n                  } else if (_this._isAvailable === null) {\n                    setTimeout(function () {\n                      return checker(resolve);\n                    }, 100);\n                  }\n                };\n\n                return _context5.abrupt(\"return\", new _Promise(checker));\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getPlugin() {\n        return _getPlugin.apply(this, arguments);\n      }\n\n      return getPlugin;\n    }()\n  }, {\n    key: \"sendTransaction\",\n    value: function () {\n      var _sendTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(pairName, contractName, method, args, paymentCurrency, paymentAmount) {\n        var waitTx,\n            keeper,\n            dApp,\n            result,\n            tx,\n            _args6 = arguments;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                waitTx = _args6.length > 6 && _args6[6] !== undefined ? _args6[6] : true;\n                _context6.next = 3;\n                return this.getPlugin();\n\n              case 3:\n                keeper = _context6.sent;\n                dApp = this.dal.contracts[pairName][contractName];\n                _context6.next = 7;\n                return keeper.signAndPublishTransaction(this._buildTransaction(dApp, method, args, paymentCurrency, paymentAmount));\n\n              case 7:\n                result = _context6.sent;\n\n                if (!result) {\n                  _context6.next = 13;\n                  break;\n                }\n\n                if (waitTx) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", result);\n\n              case 11:\n                tx = JSON.parse(result);\n                return _context6.abrupt(\"return\", _waitForTx(tx.id, {\n                  apiBase: this.dal.nodeUrl,\n                  timeout: 10000\n                }).then(function () {\n                  return result;\n                }));\n\n              case 13:\n                return _context6.abrupt(\"return\", result);\n\n              case 14:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function sendTransaction(_x, _x2, _x3, _x4, _x5, _x6) {\n        return _sendTransaction.apply(this, arguments);\n      }\n\n      return sendTransaction;\n    }()\n  }, {\n    key: \"signTransaction\",\n    value: function () {\n      var _signTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(pairName, contractName, method, args, paymentCurrency, paymentAmount) {\n        var keeper, dApp;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.getPlugin();\n\n              case 2:\n                keeper = _context7.sent;\n                dApp = this.dal.contracts[pairName][contractName];\n                return _context7.abrupt(\"return\", keeper.signTransaction(this._buildTransaction(dApp, method, args, paymentCurrency, paymentAmount)));\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function signTransaction(_x7, _x8, _x9, _x10, _x11, _x12) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }()\n  }, {\n    key: \"_buildTransaction\",\n    value: function _buildTransaction(dApp, method, args, paymentCurrency, paymentAmount) {\n      var transaction = {\n        type: 16,\n        data: {\n          fee: {\n            assetId: 'WAVES',\n            tokens: String(this.fee)\n          },\n          dApp: dApp,\n          call: {\n            args: args.map(function (item) {\n              return {\n                type: _isInteger(item) ? 'integer' : 'string',\n                value: _isObject(item) ? _JSON$stringify(item) : \"\".concat(item)\n              };\n            }),\n            \"function\": method\n          },\n          payment: !paymentAmount ? [] : [{\n            assetId: paymentCurrency || 'WAVES',\n            tokens: String(paymentAmount)\n          }]\n        }\n      };\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.log('Transaction:', transaction); // eslint-disable-line no-console\n      }\n\n      return transaction;\n    }\n  }, {\n    key: \"broadcastAndWait\",\n    value: function () {\n      var _broadcastAndWait = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(tx) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (_isString(tx)) {\n                  tx = JSON.parse(tx);\n                }\n\n                _context8.next = 3;\n                return _broadcast(tx, this.dal.nodeUrl);\n\n              case 3:\n                _context8.next = 5;\n                return _waitForTx(tx.id, {\n                  apiBase: this.dal.nodeUrl\n                });\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function broadcastAndWait(_x13) {\n        return _broadcastAndWait.apply(this, arguments);\n      }\n\n      return broadcastAndWait;\n    }()\n  }, {\n    key: \"broadcast\",\n    value: function () {\n      var _broadcast2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(tx) {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (_isString(tx)) {\n                  tx = JSON.parse(tx);\n                }\n\n                return _context9.abrupt(\"return\", _broadcast(tx, this.dal.nodeUrl));\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function broadcast(_x14) {\n        return _broadcast2.apply(this, arguments);\n      }\n\n      return broadcast;\n    }()\n  }, {\n    key: \"waitForTx\",\n    value: function () {\n      var _waitForTx2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(tx) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (_isString(tx)) {\n                  tx = JSON.parse(tx);\n                }\n\n                return _context10.abrupt(\"return\", _waitForTx(tx.id, {\n                  apiBase: this.dal.nodeUrl\n                }));\n\n              case 2:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function waitForTx(_x15) {\n        return _waitForTx2.apply(this, arguments);\n      }\n\n      return waitForTx;\n    }()\n  }, {\n    key: \"_addressChecker\",\n    value: function () {\n      var _addressChecker2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11() {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.getAddress();\n\n              case 2:\n                address = _context11.sent;\n\n                if (this._address && address && this._address !== address) {\n                  this._address = address;\n\n                  if (this.onUpdate) {\n                    this.onUpdate(this._address);\n                  }\n                }\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _addressChecker() {\n        return _addressChecker2.apply(this, arguments);\n      }\n\n      return _addressChecker;\n    }()\n  }, {\n    key: \"_buildTransferTransaction\",\n    value: function () {\n      var _buildTransferTransaction2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12() {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      function _buildTransferTransaction() {\n        return _buildTransferTransaction2.apply(this, arguments);\n      }\n\n      return _buildTransferTransaction;\n    }()\n  }, {\n    key: \"transfer\",\n    value: function () {\n      var _transfer = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(pairName, recipient, amount, assetId, fee) {\n        var tx, keeper, result;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                tx = {\n                  type: 4,\n                  data: {\n                    amount: {\n                      assetId: assetId,\n                      tokens: amount\n                    },\n                    fee: {\n                      assetId: 'WAVES',\n                      tokens: '0.001'\n                    },\n                    recipient: recipient\n                  }\n                };\n                _context13.next = 3;\n                return this.getPlugin();\n\n              case 3:\n                keeper = _context13.sent;\n                _context13.next = 6;\n                return keeper.signAndPublishTransaction(tx);\n\n              case 6:\n                result = _context13.sent;\n                console.log({\n                  result: result\n                });\n\n              case 8:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function transfer(_x16, _x17, _x18, _x19, _x20) {\n        return _transfer.apply(this, arguments);\n      }\n\n      return transfer;\n    }()\n  }]);\n\n  return Keeper;\n}();\n\nexport { Keeper as default };","map":null,"metadata":{},"sourceType":"module"}