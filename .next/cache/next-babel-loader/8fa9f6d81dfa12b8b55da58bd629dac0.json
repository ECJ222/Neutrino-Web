{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { NOTIFICATIONS_SHOW, NOTIFICATIONS_CLOSING, NOTIFICATIONS_CLOSE } from '../actions/notifications';\nconst initialState = {\n  items: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case NOTIFICATIONS_SHOW:\n      return _objectSpread({}, state, {\n        items: [].concat(state.items).filter(item => item.level !== action.level || item.message !== action.message) // unique\n        .concat([{\n          id: action.id,\n          level: action.level || 'info',\n          message: action.message,\n          isClosing: false\n        }])\n      });\n\n    case NOTIFICATIONS_CLOSING:\n      return _objectSpread({}, state, {\n        items: [].concat(state.items).map(item => {\n          if (item.id === action.id) {\n            item.isClosing = true;\n          }\n\n          return item;\n        })\n      });\n\n    case NOTIFICATIONS_CLOSE:\n      return _objectSpread({}, state, {\n        items: state.items.filter(item => item.id !== action.id)\n      });\n\n    default:\n      return state;\n  }\n});\nexport const getNotifications = state => state.notifications.items;","map":{"version":3,"sources":["/usr/local/var/www/neutrino-web/node_modules/yii-steroids/reducers/notifications.js"],"names":["NOTIFICATIONS_SHOW","NOTIFICATIONS_CLOSING","NOTIFICATIONS_CLOSE","initialState","items","state","action","type","concat","filter","item","level","message","id","isClosing","map","getNotifications","notifications"],"mappings":";;;;;;;;;;;;AAAA,SAAQA,kBAAR,EAA4BC,qBAA5B,EAAmDC,mBAAnD,QAA6E,0BAA7E;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,kBAAL;AACI,+BACOK,KADP;AAEID,QAAAA,KAAK,EAAE,GACFI,MADE,CACKH,KAAK,CAACD,KADX,EAEFK,MAFE,CAEKC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeL,MAAM,CAACK,KAAtB,IAA+BD,IAAI,CAACE,OAAL,KAAiBN,MAAM,CAACM,OAFpE,EAE6E;AAF7E,SAGFJ,MAHE,CAGK,CAAC;AACLK,UAAAA,EAAE,EAAEP,MAAM,CAACO,EADN;AAELF,UAAAA,KAAK,EAAEL,MAAM,CAACK,KAAP,IAAgB,MAFlB;AAGLC,UAAAA,OAAO,EAAEN,MAAM,CAACM,OAHX;AAILE,UAAAA,SAAS,EAAE;AAJN,SAAD,CAHL;AAFX;;AAaJ,SAAKb,qBAAL;AACI,+BACOI,KADP;AAEID,QAAAA,KAAK,EAAE,GAAGI,MAAH,CAAUH,KAAK,CAACD,KAAhB,EAAuBW,GAAvB,CAA2BL,IAAI,IAAI;AACtC,cAAIA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACO,EAAvB,EAA2B;AACvBH,YAAAA,IAAI,CAACI,SAAL,GAAiB,IAAjB;AACH;;AACD,iBAAOJ,IAAP;AACH,SALM;AAFX;;AAUJ,SAAKR,mBAAL;AACI,+BACOG,KADP;AAEID,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYK,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACO,EAA9C;AAFX;;AAKJ;AACI,aAAOR,KAAP;AAjCR;AAmCH,CApCD;AAsCA,OAAO,MAAMW,gBAAgB,GAAIX,KAAD,IAAWA,KAAK,CAACY,aAAN,CAAoBb,KAAxD","sourcesContent":["import {NOTIFICATIONS_SHOW, NOTIFICATIONS_CLOSING, NOTIFICATIONS_CLOSE} from '../actions/notifications';\n\nconst initialState = {\n    items: [],\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case NOTIFICATIONS_SHOW:\n            return {\n                ...state,\n                items: []\n                    .concat(state.items)\n                    .filter(item => item.level !== action.level || item.message !== action.message) // unique\n                    .concat([{\n                        id: action.id,\n                        level: action.level || 'info',\n                        message: action.message,\n                        isClosing: false,\n                    }]),\n            };\n\n        case NOTIFICATIONS_CLOSING:\n            return {\n                ...state,\n                items: [].concat(state.items).map(item => {\n                    if (item.id === action.id) {\n                        item.isClosing = true;\n                    }\n                    return item;\n                }),\n            };\n\n        case NOTIFICATIONS_CLOSE:\n            return {\n                ...state,\n                items: state.items.filter(item => item.id !== action.id),\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const getNotifications = (state) => state.notifications.items;\n"]},"metadata":{},"sourceType":"module"}