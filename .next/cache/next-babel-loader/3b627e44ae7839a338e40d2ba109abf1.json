{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _get from 'lodash-es/get';\nimport _isArray from 'lodash-es/isArray';\nimport { http } from 'components';\nexport const FIELDS_BEFORE_FETCH = 'FIELDS_BEFORE_FETCH';\nexport const FIELDS_AFTER_FETCH = 'FIELDS_AFTER_FETCH';\nexport const FIELDS_SET_META = 'FIELDS_SET_META';\nexport const FIELDS_ADD_SECURITY = 'FIELDS_ADD_SECURITY';\nexport const FIELDS_REMOVE_SECURITY = 'FIELDS_REMOVE_SECURITY';\nlet timer = null;\nlet queue = [];\nexport const normalizeName = name => name.replace(/\\\\/g, '.').replace(/^\\./, '');\nexport const fetch = (fieldId, model, attribute, params = {}) => dispatch => {\n  model = _get(model, 'className', String(model)); // Mark loading\n\n  dispatch({\n    type: FIELDS_BEFORE_FETCH,\n    fieldId,\n    model,\n    attribute\n  }); // Add to queue\n\n  queue.push({\n    fieldId,\n    model,\n    attribute,\n    params\n  }); // Lazy send request\n\n  if (timer) {\n    clearTimeout(timer);\n  }\n\n  timer = setTimeout(() => {\n    // Send request\n    http.post('/api/steroids/fields-fetch', {\n      fields: queue\n    }).then(fields => dispatch({\n      type: FIELDS_AFTER_FETCH,\n      fields\n    })); // Clean queue\n\n    queue = [];\n  }, 10);\n};\nexport const fetchMeta = (names, force = false) => (dispatch, getState) => {\n  if (_isArray(names)) {\n    throw new Error('This format is deprecated, use {models: ..., enums: ...} format.');\n  } // Normalize names\n\n\n  _Object$keys(names).forEach(key => {\n    names[key] = names[key].map(normalizeName);\n  });\n\n  const isMetaFetched = getState().fields.meta !== null;\n\n  if (isMetaFetched && !force) {\n    return;\n  } // Send request\n\n\n  return http.post('/api/steroids/meta-fetch', names).then(meta => setMeta(meta));\n};\nexport const setMeta = meta => ({\n  type: FIELDS_SET_META,\n  meta\n});\nexport const addSecurity = (formId, params) => ({\n  type: FIELDS_ADD_SECURITY,\n  formId,\n  params\n});\nexport const removeSecurity = formId => ({\n  type: FIELDS_REMOVE_SECURITY,\n  formId\n});","map":null,"metadata":{},"sourceType":"module"}